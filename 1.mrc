01549nam  2200373 i 4500003000800000005001700008006001900025007001500044008004100059020001800100020001500118020003200133040003500165050002700200082001500227100002700242245007100269264006100340300005200401336002700453337002700480338003700507588006300544520023400607504004100841650003800882650004900920650002600969655002200995830002701017856011001044913000601154999001501160NhNaSKC20180909155302.0m     o  d        cr mn ||||||||180909s2018    |||m    ob   a  | 0 eng d  z9781484231074  z1484231074  a9781484231081q(electronic)  aNhNaSKCbengerdaepncNhNaSKC14aQA76.73.S28b.W47 201804a006.762221 aWeston, Toby,eauthor.10aScala for Java Developers :bA Practical Primer /cby Toby Weston. 1a[Place of publication not identified] :bApress, c2018.  a1 online resource (245 pages) :billustrations.  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.0 aOnline resource; title from title screen (Skillsoft Books)  aHelping you kick-start your productivity with this growing popular language, this book will aid you in translating what you already know in Java to Scala to start your functional programming journey. --cEdited summary from book.  aIncludes bibliographical references. 0aScala (Computer program language) 0aProgramming languages (Electronic computers) 0aComputer programming. 0aElectronic books. 0aBooks 24x7 collection.7 uhttps://www.books24x7.com/marc.asp?bookid=1378762httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x703948cam  2200469 i 45000010011000000030006000110050017000170080041000340100015000750190039000900200015001290200018001440200027001620200029001890200026002180290022002440350079002660400057003450420008004020490009004100500022004190820015004411000028004562450082004842640043005662640011006093000076006203360027006963370029007233380028007525040051007805050493008315201921013246500049032459130006032949450033033009380041033339380029033749380041034039940012034449300022034561030591367OCoLC20190702035332.0180407t20182018sz mc    b   a  1 0 eng c  a2018942228  a1030458156a1030758573a1082315651  a3319907980  a9783319907987  z9783319908007q(eBook)  a9783030081041qpaperback  a3030081044qpaperback1 aAU@b000065301550  a(OCoLC)1030591367z(OCoLC)1030458156z(OCoLC)1030758573z(OCoLC)1082315651  aYDXbengerdacYDXdWAUdOCLCFdIOWdYDXITdBDXdVFL  apcc  aVFLL 4aQA76.7b.L35 201804a005.132231 aLËammel, Ralf,eauthor.10aSoftware languages :bsyntax, semantics, and metaprogramming /cRalf LËammel. 1aCham, Switzerland :bSpringer,c[2018] 4c√2018.  axxx, 424 pages :billustrations (some color), color portraits ;c25 cm.  atextbtxt2rdacontent.  aunmediatedbn2rdamedia.  avolumebnc2rdacarrier.  aIncludes bibliographical references and index.0 aThe notion of a software language -- A story of a domain-specific language -- Foundations of tree- and graph-based abstract syntax -- Representation of object programs in metaprograms -- A suite of metaprogramming scenarios -- Foundations of textual concrete syntax -- Implementation of textual concrete syntax -- A primer on operational semantics -- A primer on type systems -- An excursion into the lambda calculus -- An ode to compositionality -- A suite of metaprogramming techniques.8 aThis book identifies, defines and illustrates the fundamental concepts and engineering techniques relevant to applications of software languages in software development. It presents software languages primarily from a software engineering perspective, i.e., it addresses how to parse, analyze, transform, generate, format, and otherwise process software artifacts in different software languages, as they appear in software development. To this end, it covers a wide range of software languages - most notably programming languages, domain-specific languages, modeling languages, exchange formats, and specifically also language definition languages. Further, different languages are leveraged to illustrate software language engineering concepts and techniques. The functional programming language Haskell dominates the book, while the mainstream programming languages Python and Java are additionally used for illustration. By doing this, the book collects and organizes scattered knowledge from software language engineering, focusing on application areas such as software analysis (software reverse engineering), software transformation (software re-engineering), software composition (modularity), and domain-specific languages. It is designed as a textbook for independent study as well as for bachelor's (advanced level) or master's university courses in Computer Science. An additional website provides complementary material, for example, lecture slides and videos. This book is a valuable resource for anyone wanting to understand the fundamental concepts and important engineering principles underlying software languages, allowing them to acquire much of the operational intelligence needed for dealing with software languages in software development practice. This is an important skill set for software engineers, as languages are increasingly permeating software development. -- Provided by publisher. 0aProgramming languages (Electronic computers)  a- 1aQA76.7b.L35 2018llbksz050  aYBP Library ServicesbYANKn15250306  aBrodartbBRODn122071093  aYBP Library ServicesbYANKn15969376  aC0bVFL  aQA76.7b.L35 201802385ngm  22004693i 4500003000800000005001700008006001900025007001500044007001000059008004100069035002200110040003100132245013600163246003300299264005200332300003600384306001200420336005100432337002700483337002400510338003700534347002100571500006400592511003000656520063400686546001601320650003901336650003701375650004301412710004301455830005101498856015601549913000601705910001901711941001501730944001201745945002001757950004801777905001001825901004501835999003501880VaAlASP20190627100904.0m|||||o||c||||||||cr |n||||||||avz |za|z|190627s2018    enkm79 e     g    v|eng d  a(OCoLC)1053901386  aVaAlASPbengerdacVaAlASP00aJava to Python in 100 easy steps :bthe fastest way to learn Python for experienced Java programmers /c[instructor, Ranga Karanam]33aJava to Python to 100 steps. 1aBirmingham, England :bPACKT Publishing,c2018.  a1 online resource (479 minutes)  a075906.  atwo-dimensional moving imagebtdi2rdacontent.  acomputerbc2rdamedia.  avideobv2rdamedia.  aonline resourcebcr2rdacarrier.  avideo file2rda.  aTitle from resource description page (viewed June 27, 2019)0 aPresenter: Ranga Karanam.  aThis course will help you learn Python, one of the most popular programming languages. Python offers both object oriented and structural programming features. We take a hands-on approach using a combination of Python Shell and PyCharm as an IDE to illustrate more than 100 Python coding exercises, puzzles, and code examples. We convert a number of Java examples to Python. You will learn about implementing Object Oriented Programming concepts in Python, inheritance, abstract classes, and constructors; you will also get a better understanding of a wide variety of Python data structures: lists, sets, dictionaries, and tuples.  aIn English. 0aPython (Computer program language) 0aJava (Computer program language) 0aObject-oriented programming languages.2 aPackt Publishing,eproduction company. 0aAcademic video online (Alexander Street Press)40zClick here to view video (via Alexander Street)(Le Moyne community only)uhttp://0-www.aspresolver.com.library.lemoyne.edu/aspresolver.asp?MARC;4074102  ab  aEJM 2019-07-05  a1010014975  a4074102  aThe Whole World  cVSTR-STcEBAP-BFcPDAP-BFcAVN2-BFcPAVN-BF  uadmin  aASP4074102/marcbVaAlASPc142466tbiblio  aAcademic Video Online: Premium01898nam  2200385 i 4500003000700000006001900007007001500026008004100041020001800082020002700100035002300127035002400150035002500174035002200199040004100221050002300262082001500285100002800300245018900328264005200517300003400569336002700603337002700630338003700657504005100694588004700745590014700792650004900939650003700988776028001025830003701305856013101342913000601473999003301479MiAaPQm     o  d |      cr cnu||||||||180706s2018    enkm    ob   a  1 0 eng d  z9781789138085  a9781788993166 (e-book)  a(MiAaPQ)EBC5434977  a(Au-PeEL)EBL5434977  a(CaPaEBR)ebr11584860  a(OCoLC)1042321361  aMiAaPQbengerdaepncMiAaPQdMiAaPQ 4aQA76.7b.H565 20180 a005.132231 aHinkula, Juha,eauthor.10aHands-on full stack development with spring boot 2.0 and react :bbuild modern and scalable full stack applications using the Java-based Spring Framework 5.0 and react /cJuha Hinkula. 1aBirmingham, England :bPackt Publishing,c2018.  a1 online resource (287 pages)  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.  aIncludes bibliographical references and index.  aDescription based on print version record.  aElectronic reproduction. Ann Arbor, MI : ProQuest, 2018. Available via World Wide Web. Access may be limited to ProQuest affiliated libraries. 0aProgramming languages (Electronic computers) 0aJava (Computer program language)08iPrint version:aHinkula, Juha.tHands-on full stack development with spring boot 2.0 and react : build modern and scalable full stack applications using the Java-based Spring Framework 5.0 and react.dBirmingham, England : Packt Publishing, c2018 h287 pages z9781789138085. 0aEbook central (ProQuest) titles.40uhttp://ebookcentral.proquest.com/lib/connectny2/detail.action?docID=5434977zClick here to view book (ConnectNY ebook project)  ab  aEbook central.bSubscription01722cam  2200445 i 4500001001000000003000600010005001700016008004100033010001500074019001400089020005000103020004700153029002100200029002100221035003900242040010200281042000800383049000900391050002200400082001500422100002400437245010000461264006000561300006000621336002700681337002900708338002800737500002900765505014100794504006700935650004901002913000601051945003301057938002901090938004101119938004101160938004101201994001201242930002201254952370067OCoLC20180205040920.0161107t20172017flum     b   a  1 0 eng    a2016027690  a974197962  a9781498738460q(paperback ;qacid-free paper)  a149873846Xq(paperback ;qacid-free paper)1 aCHBISb0108069831 aCHVBKb436598817  a(OCoLC)952370067z(OCoLC)974197962  aDLCbengerdacDLCdYDXCPdBTCTAdBDXdZWUdOCLCFdYDXdCHVBKdCLEdOCLCOdTHHCUdGFCdOCLCQdVFL  apcc  aVFLL00aQA76.7b.T62 201700a005.132231 aToal, Ray,eauthor.10aProgramming language explorations /cRay Toal, Rachel Rivera, Alexander Schneider, Eileen Choe. 1aBoca Raton :bCRC Press, Taylor & Francis Group,c2017.  axvii, 343 pages :billustrations (some color) ;c26 cm.  atextbtxt2rdacontent.  aunmediatedbn2rdamedia.  avolumebnc2rdacarrier.  a"A Chapman & Hall book."0 aJavaScript -- CoffeeScript -- Lua -- Python -- Ruby -- Julia -- Java -- Clojure -- Elm -- Erlang -- Go -- Swift -- Adittional languages.  aIncludes bibliographical references (pages 329-335) and index. 0aProgramming languages (Electronic computers)  a- 1aQA76.7b.T62 2017llbksz050  aBrodartbBRODn117107484  aBaker and TaylorbBTCPnBK0019039039  aYBP Library ServicesbYANKn14718452  aYBP Library ServicesbYANKn13048457  aC0bVFL  aQA76.7b.T62 201701660nam  2200361 i 4500003000800000005001700008006001900025007001500044008004100059020001800100020001500118040003500133050002700168082001500195100002900210245014200239264006100381300005200442336002700494337002700521338003700548588006100585520029700646504004100943650003800984650004901022650002601071655002201097830002701119856013101146913000601277999001501283NhNaSKC20171211130138.0m     o  d        cr mn ||||||||171211s2017    |||m    ob   a  | 0 eng d  z9781484229842  z1484229843  aNhNaSKCbengerdaepncNhNaSKC14aQA76.73.S28b.A34 201704a006.762221 aAcetozi, Jorge,eauthor.10aPro Java Clustering and Scalability :bBuilding Real-Time Apps with Spring, Cassandra, Redis, WebSocket and RabbitMQ /cby Jorge Acetozi. 1a[Place of publication not identified] :bApress, c2017.  a1 online resource (149 pages) :billustrations.  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.0 aOnline resource; title from title screen (Books24x7.com)  aUsing a dive-in case study of a real-time scalable chat application under differing scenarios, this book will teach you how to build clustered and scalable Java-based, real-time applications using Spring Framework, Boot, WebSocket, Cassandra, Redis and RabbitMQ. --cEdited summary from book.  aIncludes bibliographical references. 0aScala (Computer program language) 0aProgramming languages (Electronic computers) 0aComputer programming. 0aElectronic books. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=1327302httpzClick here to view book (Le Moyne community only)  a1  aBooks 24x701657nam  2200373 i 4500003000800000005001700008006001900025007001500044008004100059020001800100020001500118020001900133040003500152050002700187082001500214100003100229245010000260264006100360300005200421336002700473337002700500338003700527588006300564520030100627504004100928650003800969650004901007650002601056655002201082830002701104856013101131913000601262999001501268NhNaSKC20180306165833.0m     o  d        cr mn ||||||||180306s2017    |||m    ob   a  | 0 eng d  z9781484227121  z1484227123  aq(electronic)  aNhNaSKCbengerdaepncNhNaSKC14aQA76.73.S28b.J43 201704a006.762221 aJecan, Alexandru,eauthor.10aJava 9 Modularity Revealed :bProject Jigsaw and Scalable Java Applications /cby Paolo Sironi. 1a[Place of publication not identified] :bApress, c2017.  a1 online resource (221 pages) :billustrations.  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.0 aOnline resource; title from title screen (Skillsoft Books)  aShowing you how to develop modular applications using the Java Platform Module System, this book will help you improve maintainability and performance of your Java applications by deploying only modules that are needed and encapsulating their implementation details. --cEdited summary from book.  aIncludes bibliographical references. 0aScala (Computer program language) 0aProgramming languages (Electronic computers) 0aComputer programming. 0aElectronic books. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=1350732httpzClick here to view book (Le Moyne community only)  a1  aBooks 24x701847nam  2200409 i 4500003000700000006001900007007001500026008004100041020001800082020002700100035002300127035002400150035002500174035002100199040004100220050002800261082001600289100003600305245010300341264005400444264001100498300005200509336002200561337002400583338003300607500002000640588009900660590014700759630003700906650005100943650003600994776020001030830003701230856013101267913000601398999003301404MiAaPQm     o  d |      cr cnu||||||||170727t20172017enkm    o    a  1 0 eng d  z9781787127944  a9781787126589 (e-book)  a(MiAaPQ)EBC4891269  a(Au-PeEL)EBL4891269  a(CaPaEBR)ebr11404957  a(OCoLC)993064123  aMiAaPQbengerdaepncMiAaPQdMiAaPQ 4aQA76.73.J38b.L486 20170 a005.1332231 aLeun, Vincent van der,eauthor.10aIntroduction to JVM languages :bJava, Scala, Clojure, Kotlin, and Groovy /cVincent van der Leun. 1aBirmingham, [England] :bPackt Publishing,c2017. 4c√2017.  a1 online resource (438 pages) :billustrations.  atext2rdacontent.  acomputer2rdamedia.  aonline resource2rdacarrier.  aIncludes index.  aDescription based on online resource; title from PDF title page (ebrary, viewed July 25, 2017)  aElectronic reproduction. Ann Arbor, MI : ProQuest, 2016. Available via World Wide Web. Access may be limited to ProQuest affiliated libraries.00aJava (Computer program language) 0aObject-oriented programming (Computer science) 0aComputer softwarexDevelopment.08iPrint version:aLeun, Vincent van der.tIntroduction to JVM languages : Java, Scala, Clojure, Kotlin, and Groovy.dBirmingham, [England] : Packt Publishing, c2017 hxi, 418 pages z9781787127944. 0aEbook central (ProQuest) titles.40uhttp://ebookcentral.proquest.com/lib/connectny2/detail.action?docID=4891269zClick here to view book (ConnectNY ebook project)  ab  aEbook central.bSubscription01611nam  2200361 i 4500003000800000005001700008006001900025007001500044008004100059020001800100020001500118040003500133050002700168082001500195100002600210245009600236264006100332300005200393336002700445337002700472338003700499588006100536520029700597504004100894650003800935650004900973650002601022655002201048830002701070856013101097913000601228999001501234NhNaSKC20170530105028.0m     o  d        cr mn ||||||||170530s2016    |||m    ob   a  | 0 eng d  z9781484224892  z1484224892  aNhNaSKCbengerdaepncNhNaSKC14aQA76.73.S28b.D38 201604a006.762221 aDavis, Adam,eauthor.10aModern Programming Made Easy :bUsing Java, Scala, Groovy, and JavaScript /cAdam L. Davis. 1a[Place of publication not identified] :bApress, c2016.  a1 online resource (148 pages) :billustrations.  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.0 aOnline resource; title from title screen (Books24x7.com)  aWhether you're a student, a teacher, looking for a career change, or just a hobbyist, this concise book teaches you basic coding principles, including working with lists, sets, arrays, and maps; coding in the object-oriented style; and writing a web application. --cEdited summary from book.  aIncludes bibliographical references. 0aScala (Computer program language) 0aProgramming languages (Electronic computers) 0aComputer programming. 0aElectronic books. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=1201802httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x702620nam  2200457Ii 4500003000800000005001700008006001900025007001500044008004100059020003200100020002500132040003500157050002800192082001500220100002800235245008500263250002000348264004800368264001100416300004000427336002700467337002700494338003700521490003200558588008200590520094700672504005101619650004901670650002601719650003701745650005101782650004601833655002201879700002801901700002701929830002801956830002701984856013002011913000602141999001502147CtWfDGI20150529142440.0m     o  d        cr mn ||||||||150522t20152015nyum    ob   a  1 0 eng d  a9781484202326q(electronic)  z9781484202333q(pbk)  aCtWfDGIbengerdaepncCtWfDGI14aQA76.73.S23bP65 2015eb04a005.132221 aLayka, Vishal,eauthor.10aBeginning Scala /cVishal Layka, David Pollak ; technical reviewer, Rohan Walia.  aSecond edition. 1a[New York] :bfriendsof ED, Apress,c[2015] 4c√2015.  a1 online resource :billustrations.  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.1 aThe expert's voice in Java.0 aOnline resource; title from title screen (Books24x7.com, viewed May 22, 2015)  aThis book takes a down-to-earth approach to Scala. It introduces the Scala programming language, its object-oriented and functional programming characteristics, and Scala constructs and libraries that allow you to assemble small components into high-performance, scalable systems. You will learn why Scala is judiciously used for critical business applications by leading companies such as Twitter, LinkedIn, Foursquare, the Guardian, Morgan Stanley, Credit Suisse, UBS, and HSBC. Topics include: basic syntax and mechanisms for writing programs; object-oriented features; functional programming features to define and manage concurrency; parsers using Scala's library; XML content; standard annotations; integration and reuse of an existing Java codebase; building projects that contain both Scala and Java code and dependencies; libraries and web frameworks such as Play 2 to build web applications with Scala. --cEdited summary from book.  aIncludes bibliographical references and index. 0aProgramming languages (Electronic computers) 0aComputer programming. 0aJava (Computer program language) 0aObject-oriented programming (Computer science) 0aFunctional programming (Computer science) 0aElectronic books.1 aPollak, David,eauthor.1 aWalia, Rohan,eeditor. 0aExpert's voice in Java. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=821662httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x702363nam  2200445Ii 4500003000800000005001700008006001900025007001500044008004100059020002800100020001800128040003500146050002900181082001600210100003500226245011000261264006600371300002300437336002700460337002700487338003700514490003600551500015900587588008700746520058000833500002001413630002701433650003701460650004301497650003701540650003501577655002201612700003201634700003701666830003601703830002701739856013001766913000601896999001501902CtWfDGI20150922110506.0m     o  d        cr mn ||||||||150909s2015    enkm    o    a  1 0 eng d  a9781784392673q(e-book)  z9781784392789  aCtWfDGIbengerdaepncCtWfDGI14aQA76.76.V47bI355 2015eb04a005.1332231 aIkkink, Hubert Klein,eauthor.10aGradle dependency management /cHubert Klein Ikkink ; reviewers, Izzet Mustafaiev, Konstantin Zgirovskiy. 1aBirmingham, UK :bPackt Open Source, Packt Publishing,c2015.  a1 online resource.  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.1 aCommunity experience distilled.  a"Learn how to use Gradle's powerful dependency management through extensive code samples, and discover how to define, customize, and deploy dependencies."0 aOnline resource; title from title screen (Books24x7.com, viewed September 9, 2015)  aGradle is the next generation in build automation. This book will teach you how to use its powerful dependency management through extensive code samples, and discover how to define, customize, and deploy dependencies. You will learn how to define dependencies in Java projects; publish artifacts to Maven and Ivy repositories; configure transitive dependencies; install artifacts in Bintray; customize the resolution of dependency rules; use your own code as dependencies in a multimodule project; configure repositories to resolve dependencies. --cEdited summary from book.  aIncludes index.00aGradle (Computer file) 0aJava (Computer program language) 0aDomain-specific programming languages. 0aComputer softwarexVerification. 0aComputer softwarexValidation. 0aElectronic books.1 aMustafaiev, Izzet,eeditor.1 aZgirovskiy, Konstantin,eeditor. 0aCommunity experience distilled. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=931572httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x702449nam  2200421Ii 4500003000800000005001700008006001900025007001500044008004100059020002500100020002500125040003500150050002700185082001600212100003500228245012400263264003400387264001100421300004000432336002700472337002700499338003700526490003700563588008700600520095100687500002001638650002901658650002501687650003701712650001401749655002201763700003101785830003301816830002701849856013001876913000602006999001502012CtWfDGI20151130172840.0m     o  d        cr mn ||||||||151110t20152015nyum    o    a  1 0 eng d  a9781484214343q(ebk)  z9781484214350q(pbk)  aCtWfDGIbengerdaepncCtWfDGI14aQA76.9.C55bV64 2015eb04a004/.362231 aVohra, Deepak,d1966-eauthor.10aPro Couchbase development :ba NoSQL platform for the enterprise /cDeepak Vohra ; technical reviewer, Massimo Nardone. 1a[New York] :bApress,c[2015] 4c√2015.  a1 online resource :billustrations.  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.1 aThe expert's voice in databases.0 aOnline resource; title from title screen (Books24x7.com, viewed November 10, 2015)  aThis book discusses programming for Couchbase using Java and scripting languages, querying and searching, handling migration, and integrating Couchbase with Hadoop, HDFS, and JSON. It also discusses migration from other NoSQL databases like MongoDB. It is for big data developers who use Couchbase NoSQL database or want to use Couchbase for their web applications as well as for those migrating from other NoSQL databases like MongoDB and Cassandra. You'll learn what big data has got to do with NoSQL and Couchbase Server; programming with Java for Couchbase; develop with Couchbase using scripting languages including JavaScript, PHP and Ruby; query and search using the Couchbase plug-in for elasticsearch, NIQL, Strings and more; handle migration paths like MongoDB to Couchbase, Cassandra to Couchbase, Oracle DB and Tables to Couchbase and more; integrate Couchbase with Hadoop, Hadoop Tables, HDFS, and JSON. --cEdited summary from book.  aIncludes index. 0aClient/server computing. 0aDatabase management. 0aJava (Computer program language) 0aBig data. 0aElectronic books.1 aNardone, Massimo,eeditor. 0aExpert's voice in databases. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=943612httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x701754nam  2200409 i 4500003000700000006001900007007001500026008004100041020001800082020002700100035002300127035002400150035002500174035002100199040004100220050002800261082001800289100003000307245004300337250001900380264007400399264001100473300005200484336002200536337002400558338003300582500002000615588010200635590014700737650003700884650004300921776017300964830003701137856013101174913000601305999003301311MiAaPQm     o  d |      cr cnu||||||||160210t20152015xx m    o    a  1 0 eng d  z9780992133085  a9780992133085 (e-book)  a(MiAaPQ)EBC4339837  a(Au-PeEL)EBL4339837  a(CaPaEBR)ebr11150261  a(OCoLC)908649752  aMiAaPQbengerdaepncMiAaPQdMiAaPQ 4aQA76.73.J38b.K876 20150 a005.2762 2231 aKurniawan, Budi,eauthor.10aUpgrading to Java 8 /cBudi Kurniawan.  aFirst edition. 1a[Place of publication not identified] :bBrainy Software Inc.,c2015. 4c√2015.  a1 online resource (109 pages) :billustrations.  atext2rdacontent.  acomputer2rdamedia.  aonline resource2rdacarrier.  aIncludes index.  aDescription based on online resource; title from PDF title page (ebrary, viewed February 9, 2016)  aElectronic reproduction. Ann Arbor, MI : ProQuest, 2016. Available via World Wide Web. Access may be limited to ProQuest affiliated libraries. 0aJava (Computer program language) 0aObject-oriented programming languages.0 iPrint version:aKurniawan, Budi.tUpgrading to Java 8.bFirst edition.d[Place of publication not identified] : Brainy Software Inc., c2015 h103 pages z9780992133085. 0aEbook central (ProQuest) titles.40uhttps://ebookcentral.proquest.com/lib/connectny/detail.action?docID=4339837zClick here to view book (ConnectNY ebook project)  ab  aEbook central.bSubscription03776cam  2200433Ki 4500001001000000003000600010005001700016008004100033010001500074016001800089019001400107020001500121020001800136020002700154020002400181029002200205035003900227040010600266049000900372050002200381082001600403100001600419245009300435260004200528300004800570336002700618337002900645338002800674505108000702520131901782650003803101913000603139945003303145938004103178938004803219938004103267994001203308930002203320875742085OCoLC20160727112551.0140404s2014    sz m         a  0 0 eng d  a20149421677 a0167757822Uk  a905486411  a3319067753  a9783319067759  a9783319067766q(eBook)  a3319067761q(eBook)1 aAU@b000053967540  a(OCoLC)875742085z(OCoLC)905486411  aYDXCPbengerdacYDXCPdBTCTAdOCLCQdUKMGBdRDFdOCLCOdOCLCFdOUPdTAMCTdCDXdN5LdTWJdOCLCQdVFL  aVFLL 4aQA76.7b.H86 201404a005.1332231 aHunt, John.12aA beginner's guide to scala, object orientation and functional programming /cJohn Hunt.  aCham, Switzerland :bSpringer,c2014.  axviii, 494 pages :billustrations ;c24 cm.  atextbtxt2rdacontent.  aunmediatedbn2rdamedia.  avolumebnc2rdacarrier.0 aIntroduction -- Elements of object orientation -- Why object orientation? -- Constructing an object oriented system -- Functional programming -- Scala background -- A little scala -- Scala building blocks -- Scala classes -- Scala methods -- Building a class -- Packages & encapsulation -- Classes, inheritance and abstraction -- Objects and instances -- Value classes -- Scala constructs -- Control and iteration -- Traits -- Further traits -- Arrays -- Tuples -- Functional programming in scala -- Higher order function -- Partially applied functions and currying -- Scala collections framework -- Immutable lists and maps -- Immutable and mutable collection packages -- Type parameterization -- Further language constructs -- Exception handling -- Scala and JDBC database access -- Scala style database access -- Scala and MYSQL database example -- Testing -- Scala testing -- Introduction to Akka actors -- Further Akka actors -- Play framework -- RESTful services -- GUIs in scala swing -- User input in scala swing -- Scala build tools -- Scala & Java interoperability.  aScala is a new programming language developed by Martin Odersky and his team at the EPFL. The name Scala is derived from Sca(lable) La(nguage). Scala is a multi-paradigm language, incorporating object oriented approaches with functional programming. Although some familiarity with standard computing concepts is assumed (such as the idea of compiling a program and executing this compiled form, etc.) and with basic procedural language concepts (such as variables and allocation of values to variables) the early chapters of the book do not assume any familiarity with object orientation nor functional programming. These chapters also step through other concepts with which the reader may not be familiar (such as list processing). From this background, John Hunt provides a practical introduction to object and functional technology using Scala, one of the newest and most interesting programming languages available. A variety of concepts are introduced through practical experience taking the reader beyond the level of the language syntax to the philosophy and practice of object-oriented development and functional programming. Students, and those actively involved in the software industry will find this comprehensive introduction to Scala, and to object orientation and functional programming, invaluable. 0aScala (Computer program language)  a- 1aQA76.7b.H86 2014llbksz050  aBaker and TaylorbBTCPnBK0014749819  aCoutts Information ServicesbCOUTn28024012  aYBP Library ServicesbYANKn11734741  aC0bVFL  aQA76.7b.H86 201402391nam  2200409 a 4500003000800000005001700008006001900025007001500044008004100059020001800100020002400118020002400142040002600166050002900192082001600221100001900237245010200256250001200358256002300370260009400393490001700487538004900504500002900553516001000582550005200592530003400644520097600678504005101654650003701705655002201742710002001764830001901784830002701803856013001830913000601960999001501966CtWfDGI20141113155553.0m     o  d        cr zn|        141030s2014    njum    ob   a  1 0 eng d  z9781118407813  a9781118417560 (ebk)  a9781118461068 (ebk)  aCtWfDGIbengcCtWfDGI14aQA76.73.J38bB873 2014eb04a005.1332231 aBurd, Barry A.10aBeginning programming with Java for dummies, 4th editionh[electronic resource] /cby Barry Burd.  a4th ed.  aComputer document.  aHoboken, N.J. :bJohn Wiley & Sons,cc2014e(Norwood, Mass. :fBooks24x7.com [generator])1 aFor dummies.  aMode of access: Internet via World Wide Web.  aTitle from title screen.  aText.  aDigitized and made available by: Books24x7.com.  aAvailable also in a print ed.  aThis fourth edition covers basic development concepts and techniques through a Java lens. The reader will learn what goes into a program, how to put the pieces together, how to deal with challenges, and how to make it work. It has been updated to align with Java 8, and includes new options for the latest tools and techniques. Step-by-step instruction, easy-to-read language, and quick navigation make this book the perfect resource for new programmers. It begins with the basics before moving into code, with simple, yet detailed explanations every step of the way. Coverage includes: learning the language with sample programs and the Java toolkit; decisions, conditions, statements, and information overload; differentiating between loops and arrays, objects and classes, methods and variables. The book also contains links to additional resources, other programming languages, and guidance as to the most useful classes in the Java API. --cEdited summary from book.  aIncludes bibliographical references and index. 0aJava (Computer program language) 0aElectronic books.2 aBooks24x7, Inc. 0a--For dummies. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=634632httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x702705nam  2200445 a 4500003000800000005001700008006001900025007001500044008004100059020004400100020002600144040002600170050002500196082001600221100002500237245014900262256002300411260009400434538004900528500002900577516001000606550005200616530003400668520098900702504005101691650005101742650003901793650003601832650003501868650003701903650004401940650002701984655002202011700002802033710002002061830002702081856013002108913000602238999001502244CtWfDGI20141017195956.0m     o  d        cr zn|        141017s2014    gw m    ob   a  1 0 eng d  z9783642393228 (hard cover : alk. paper)  a9783642393235 (eBook)  aCtWfDGIbengcCtWfDGI14aQA76.64b.S68 2014eb04a005.1172221 aSoukup, Jiri,d1937-10aSerialization and persistent objectsh[electronic resource] :bturning data structures into efficient databases /cJiri Soukup, Petr Mach‚aÈcek.  aComputer document.  aHeidelberg ;aNew York :bSpringer,cc2014e(Norwood, Mass. :fBooks24x7.com [generator])  aMode of access: Internet via World Wide Web.  aTitle from title screen.  aText.  aDigitized and made available by: Books24x7.com.  aAvailable also in a print ed.  aThis book details how to write programs which store their internal data automatically and transparently to disk. Together with special data structure libraries which treat relations among objects as first-class entities, and with a UML class-diagram generator, the core application code is much simplified. The benchmark chapter shows a typical example where persistent data is faster by the order of magnitude than with a traditional database, in both traversing and accessing the data. It covers the most popular object-oriented languages (C++, C#, Java, Objective C); includes tricks and hints for efficient implementations; and is complemented by a website with downloadable code samples. The book targets professional programmers working on any industry applications. Researchers in areas like language design, compiler construction, performance evaluation, and no-SQL applications will find a wealth of novel ideas and valuable implementation tips. --cEdited summary from book.  aIncludes bibliographical references and index. 0aObject-oriented programming (Computer science) 0aData structures (Computer science) 0aC++ (Computer program language) 0aC# (Computer program language) 0aJava (Computer program language) 0aObjective-C (Computer program language) 0aUML (Computer science) 0aElectronic books.1 aMach‚aÈcek, Petr.4aut.2 aBooks24x7, Inc. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=699642httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x702835nam  2200457 a 4500003000800000005001700008006001900025007001500044008004100059020002400100020003100124040002600155050002800181082001700209245017900226246009900405256002300504260009400527490003200621538004900653500002900702516001000731550005200741530003400793520102000827504005101847630003301898650003701931650004901968650003902017650002602056655002202082700002202104700002502126710002002151830002802171830002702199856013002226913000602356999001502362CtWfDGI20141029120031.0m     o  d        cr zn|        141003s2014    nyum    ob   a  1 0 eng d  z9781430265740 (pbk)  a9781430265757 (electronic)  aCtWfDGIbengcCtWfDGI14aQA76.73.J38bP76 2014eb04a005.13/322300aPro JavaFX 8h[electronic resource] :ba definitive guide to building desktop, mobile, and embedded Java clients /cJohan Vos ... [et al.] ; technical reviewer, Mark Heckler.3 aPro JavaFX eight :ba definitive guide to building desktop, mobile, and embedded Java clients.  aComputer document.  a[New York] :bfriends of ED/Apress,cc2014e(Norwood, Mass. :fBooks24x7.com [generator])1 aThe expert's voice in Java.  aMode of access: Internet via World Wide Web.  aTitle from title screen.  aText.  aDigitized and made available by: Books24x7.com.  aAvailable also in a print ed.  aThis book provides code examples that explore the exciting new features provided with JavaFX 8 which comes as part of Oracle's new Java (SE) 8 release. The reader will learn how to: get started with JavaFX, including downloading the SDK and available tools; express user interfaces with SceneBuilder and FXML; use property binding to keep the UI easily in sync with the model; use the rich set of JavaFX UI controls, charts, shapes, effects, transformations, and animations to create stunning, responsive, user interfaces; use the powerful JavaFX layout classes to define the user interface in a cross-platform fashion; leverage the observable collection classes to observe changes in, and bind to, Java collections; use the JavaFX media classes to play audio and video; interact with external application services to create an enterprise application with JavaFX; use the JavaFX API with alternative languages such as Scala and Groovy; use Java on embedded, mobile, and tablet devices. --cEdited summary from book.  aIncludes bibliographical references and index.00aJavaFX (Electronic resource) 0aJava (Computer program language) 0aGraphical user interfaces (Computer systems) 0aApplication softwarexDevelopment. 0aInternet programming. 0aElectronic books.1 aVos, Johan.4aut.1 aHeckler, Mark.4rev.2 aBooks24x7, Inc. 0aExpert's voice in Java. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=707032httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x702615nam  2200469 a 4500003000800000005001700008006001900025007001500044008004100059020002400100020003100124040002100155050002700176082001700203100002100220245014000241246002100381246001400402250001200416256002300428260009400451490003400545538004900579500002900628516001000657550005200667530003400719520096700753500002001720650003701740650003901777655002201816700002401838700002301862700003201885710002001917830003001937830002701967856013001994913000602124999001502130CtWfDGI20141122154403.0m     o  d        cr zn|        141122s2014    nyum    o    a  1 0 eng d  z9781430261513 (pbk)  a9781430261520 (electronic)  aCtWfDGIcCtWfDGI14aQA76.73.J38bH6 2014eb04a005.13/32221 aSchaefer, Chris.10aPro Spring, fourth editionh[electronic resource] /cChris Schaefer, Clarence Ho, Rob Harrop ; technical reviewer,
 Manuel Jordan Elera.3 aPro Spring four.3 aSpring 4.  a4th ed.  aComputer document.  a[New York] :bfriends of Ed/Apress,cc2014e(Norwood, Mass. :fBooks24x7.com [generator])1 aThe expert's voice in Spring.  aMode of access: Internet via World Wide Web.  aTitle from title screen.  aText.  aDigitized and made available by: Books24x7.com.  aAvailable also in a print ed.  aThis book will teach you how to leverage the Spring Framework to build the various tiers or parts of an enterprise Java application: transactions, Web and presentation tiers, deployment, and much more. A full sample application allows you to apply many of the technologies and techniques covered in this book and see how they work together. You'll learn how to get started with the Spring Framework; use inversion of control (IoC) and dependency injection (DI); apply aspect-oriented programming (AOP) techniques with Spring; access and persist data using Spring and Hibernate, MyBatis, JPA 2 and more; build transaction engines for your enterprise application and take advantage of other middle-tier features in Spring; create Spring-based Web applications using Spring MVC and more; design and build Spring-based front ends; and work with scripting languages such as Groovy to provide enhanced functionality for your applications. --cEdited summary from book.  aIncludes index. 0aJava (Computer program language) 0aApplication softwarexDevelopment. 0aElectronic books.1 aHo, Clarence.4aut.1 aHarrop, Rob.4aut.1 aElera, Manuel Jordan.4rev.2 aBooks24x7, Inc. 0aExpert's voice in Spring. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=725882httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x702387nam  2200409Ii 4500003000800000005001700008006001900025007001500044008004100059020003200100020002500132040003500157050002800192082001700220100003000237245013500267264004800402264001100450300004000461336002700501337002700528338003700555490003200592588008700624520087000711500002001581650003701601650004901638655002201687700002901709700003301738830002801771830002701799856013001826913000601956999001501962CtWfDGI20150301102707.0m     o  d        cr mn ||||||||150228t20142014nyum    o    a  1 0 eng d  a9781484207130q(electronic)  z9781484207147q(pbk)  aCtWfDGIbengerdaepncCtWfDGI14aQA76.73.J38bS53 2014eb04a005.13/32231 aSharan, Kishori,eauthor.10aScripting in Java :bintegrating with Groovy and JavaScript /cKishori Sharan ; technical reviewers, Vinay Kumar, Massimo Nardone. 1a[New York] :bfriendsof ED, Apress,c[2014] 4c√2014.  a1 online resource :billustrations.  atextbtxt2rdacontent.  acomputerbc2rdamedia.  aonline resourcebcr2rdacarrier.1 aThe expert's voice in Java.0 aOnline resource; title from title screen (Books24x7.com, viewed February 28, 2015)  aThis book teaches readers how to use the Java Scripting API and JavaScript to execute scripts and take advantage of the features of a scripting language while developing Java applications. It also covers topics that enable scripting languages to take advantage of Java features and the Java class library, including the new Java Collections and JavaFX 8 APIs. Most of the examples in this book use JavaScript on the Nashorn engine. Coverage includes how to: execute scripts and pass parameters to scripts; write scripts in Nashorn and invoke procedures in scripts; use compiled scripts and use Java in scripting languages; use the new Java APIs, including JavaFX 8 and Collections in Nashorn; implement a script engine; and use the jrunscript and jjs command-line tools. Java Scripting API as found in the new Java 8 is also discussed. --cEdited summary from book.  aIncludes index. 0aJava (Computer program language) 0aProgramming languages (Electronic computers) 0aElectronic books.1 aKumar, Vinay,ereviewer.1 aNardone, Massimo,ereviewer. 0aExpert's voice in Java. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=776432httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x704356cam  2200493 i 4500001001000000003000600010005001700016008004100033010001500074016001800089020004300107020004000150035002100190040010200211042000800313049000900321050002600330082001700356084003400373100002900407245007300436264006100509264001100570300003100581336002700612337002900639338002800668490004700696520179300743504005102536505079002587650005003377650003703427650004203464650005403506650004703560650001903607830004703626856010803673913000603781945003703787994001203824930002603836746838167OCoLC20140902083016.0120820s2013    flum     b   a  1 0 eng    a20120250847 a0161032052Uk  a9781439896662 (pbk. : acid-free paper)  a1439896666 (pbk. : acid-free paper)  a(OCoLC)746838167  aDLCbengerdacDLCdYDXdBTCTAdUKMGBdOCLCOdYDXCPdBWXdOKNdOCLCFdOCLCQdUUAdSZRdOCLCQdVFL  apcc  aVFLL00aQA76.73.S28bL49 201300a005.1/14223  aCOM051010aMAT0000002bisacsh1 aLewis, Mark C.,eauthor.10aIntroduction to the art of programming using Scala /cMark C. Lewis. 1aBoca Raton :bCRC Press, Taylor & Francis Group,c[2013] 4c√2013.  axxxiv, 902 pages ;c26 cm.  atextbtxt2rdacontent.  aunmediatedbn2rdamedia.  avolumebnc2rdacarrier.1 aChapman & Hall/CRC textbooks in computing.  a"Preface Welcome to an Introduction to the Art of Programming Using Scala". This book is intended to be used in first and second semester college classrooms to teach students beginning programming. To accomplish this task, the Scala1 programming language is used. The book was constructed with a focus on the topics students need to know. These topics were then woven into a format that was deemed the best way to communicate those ideas. Because there are two very different audiences who might be reading this, the rest of the preface is split into two sections. To the Student Welcome to the world of programming. You are about to embark on a field of study that will hopefully open your mind to new ways of thinking and impact the way you view everything in the world around you. For students who intend to major in Computer Science and make careers working with computer technology, this is your first step in learning how to communicate with the computer and to instruct the computer in how it should solve problems for you. For those who are not planning to make a career in a computing field, a course in computer programming can still be remarkably beneficial. Computer programming is, fundamentally, about problem solving. It is about figuring out how to solve problems and express them in ways that the computer can understand. Your entire future life is, in one way or another, going to deal with how to solve problems. You will need to have approaches to solving these problems well formed in your own head and be able to communicate them to other people in non-ambiguous ways so that they understand what you want and can act on it. Learning to program computers will help you develop and hone this ability. There are more direct benefits as well."--cProvided by publisher.  aIncludes bibliographical references and index.0 aBasics of computers, computing, and programming -- Getting to know the tools -- Scala basics -- Conditionals -- Functions -- Recursion for iteration -- Arrays and lists in scala -- Loops -- Text files -- Case classes -- GUIs -- Graphics -- Sorting and searching -- XML -- Recursion -- Object-orientation -- Bigger problems/new tools -- A project (drawing program) -- Abstraction and polymorphism -- Other collection types -- Multithreading and concurrency -- Stream I/O -- Networking -- Stacks and queues -- Linked lists -- Priority queues -- Refactoring -- Recursion -- Trees -- Regular expressions and context-free parsers -- Spatial trees -- Binary heaps -- Direct access binary files -- Actors -- Augmenting trees -- Wrapping up -- Quick preview of Java -- Advanced scala concepts. 0aScala (Computer program language)vTextbooks. 0aComputer programmingvTextbooks. 0aObject-oriented databasesvTextbooks. 0aObject-oriented programming languagesvTextbooks. 0aObject-oriented methods (Computer science) 0aSystem design. 0aChapman & Hall/CRC textbooks in computing.42zCover imageuhttp://jacketsearch.tandf.co.uk/common/jackets/covers/websmall/978143989/9781439896662.jpg  a- 1aQA76.73.S28bL49 2013llbksz050  aC0bVFL  aQA76.73.S28bL49 201310764cam  2200505 a 4500001001000000003000600010005001700016008004100033010001500074016001800089019001400107020003800121020003500159035003900194040007600233042000800309049000900317050002300326082002100349100001900370245014500389260004300534300003300577504005100610505099800661505098501659505098202644505098603626505097304612505099905585505098806584505092507572505096808497505028609465520027409751650004610025650003010071650002610101650003610127700002010163913000610183945003410189994001210223930002310235779258321OCoLC20140129081619.0120924s2012    maum     b   a  1 0 eng    a20120344267 a0160815942Uk  a815614855  a9780124158115 (pbk. : alk. paper)  a0124158110 (pbk. : alk. paper)  a(OCoLC)779258321z(OCoLC)815614855  aDLCbengcDLCdYDXdBTCTAdUKMGBdYDXCPdCDXdBWXdCOOdAU@dOCLCOdVFL  apcc  aVFLL00aHD38.7b.W566 201200a658.4/7202852231 aWise, Lyndsay.10aUsing open source platforms for business intelligence :bavoid pitfalls and maximize ROI /cLyndsay Wise ; [acquiring editor: Andrea Dierna]  aWaltham, MA :bMorgan Kaufmann,c2012.  axv, 210 p. :bill. ;c24 cm.  aIncludes bibliographical references and index.0 aContents note continued: OSBI transition and the expansion of OSBI into BI -- OSBI within the OS market -- Where OSBI solutions will/should be in the future -- Implications for businesses -- SECTION 2 A DEEPER LOOK AT OSBI -- ch. 5 The increasing popularity of OS -- A look at BI drivers -- Price comparability -- Features and functions -- Licensing models and the issues surrounding them -- Maintenance -- Extensibility -- Open technology and integration -- BI in the cloud and SaaS offerings -- Collaboration and social networks -- Putting it all together -- ch. 6 The differences between general OS and commercial offerings -- Understanding different OS models -- Internal development -- Community collaboration -- OS as a consulting tool -- Looking at community and commercial OS models -- OSBI models -- Community --- truly free -- Free software with separate purchases -- Commercial offerings -- The services approach -- Looking at the community/commercial focus in the broader market --0 aContents note continued: The drivers of commercial OS for BI -- The bottom line -- ch. 7 Business benefits and challenges of OS for BI -- How business and IT approach BI -- The relationship between business and IT -- Are benefits and challenges different or similar for business and IT worldviews? -- A look at OSBI benefits -- Quick deployment times -- Internal development efforts can better align with business goals -- Customization options -- Subscriptions -- OS framework -- Business benefits --- a wrap-up -- A look at OSBI challenges -- Development efforts -- Long-term costs -- Business and IT collaboration and project sponsorship -- Scalability -- What all of this means for business justification -- SECTION 3 BI STRATEGIES FOR SUCCESS --- TYING IN OS ADOPTION WITH BI SUCCESS -- ch. 8 The strategy behind BI adoption -- Adopting BI -- Goals of consolidating information across disparate data sources -- Better business visibility -- Mitigating risk -- Metrics/KPIs --0 aContents note continued: Acquisitions -- Competitive edge --- everybody else is doing it! -- Why these factors matter -- Why choose OS -- Already familiar with OS -- Want to get off the ground running (as McKnight says) -- Budgetary constraints -- Want to experiment with BI before committing -- Why go traditional -- Currently using proprietary software -- No Java expertise in-house -- Uncomfortable with the concept of OS -- Looking to expand -- Takeaways -- ch. 9 Implications for users -- A practical guide to selecting OS -- Business factors of adoption -- Technical factors -- Considerations -- Price and maintenance breakdown -- Long-term costs -- IT development -- Business and technical requirements -- Checklist for software selection and implementation -- SECTION 4 JUSTIFYING OSBI PROJECTS -- ch. 10 Selling an OSBI project to the business -- A closer look at ways of selling OSBI -- Community OSBI adoption -- Who benefits on the business side from using OSBI? --0 aContents note continued: What is involved in getting buy-in and in developing these offerings? -- Why should the business side of an organization consider community OS as an option? -- When is community OS BI appropriate? -- Commercial after community -- Who evaluates commercial OSBI? -- What benefits does switching from a free model to commercial OS provide to the business unit(s) involved? -- Why do organizations want to transition from one model to the other? -- When should organizations progress towards commercial OS? -- Commercial for the first time -- Who chooses commercial OS over traditional BI models? -- What are the benefits of OSBI for businesses not familiar with the model? -- How are the benefits of this model sold to the business? -- New to BI -- Who is new to BI? -- What are the options for companies starting out with BI for the first time? -- Why consider OS over traditional BI when new? -- BI expansion -- Who benefits from BI expansion through OS? --0 aContents note continued: What benefit does expansion provide? -- Why do organizations choose to expand with OS? -- Rip and replace -- Who decides to replace their BI offerings with something new? -- What do companies need to know about replacing solutions with OSBI offerings? -- Why does OSBI provide value that mature traditional BI platforms might not? -- What should a company's expectations be regarding a rip-and-replace model? -- Embedded applications -- Sorting out the different models and what it means to business units -- Why sell to the business -- Selling framework -- Why IT has to work with business units and why business units need to collaborate with one another -- The bottom line for OSBI adoption in organizations -- ch. 11 Evaluating ROI and TCO -- Developing valid definitions of ROI and TCO -- Return on investment -- Total cost of ownership -- ROI and TCO similarities and differences -- Why ROI and TCO are important to software selection --0 aContents note continued: Developing an evaluation framework for your OSBI project -- Software costs -- Professional services or outside consulting -- Development efforts and time to deployment -- New hardware requirements -- More efficient processes --- time savings -- Maintenance costs -- Licensing fees -- Putting everything together -- What is time to value? -- A look at long-term ROI and TCO -- ch. 12 Developing a cost-benefit analysis for OSBI: A practical look at ROI and TCO calculations -- General TCO/ROI models --- a look at what exists in the market -- Applying these models to ROI for OSBI -- Evaluating TCO for OSBI -- ROI and TCO calculations -- Looking at commercial versus community offerings -- SECTION 5 UNDERSTANDING THE TECHNOLOGY BEHIND BUSINESS VALUE -- ch. 13 A look at technical considerations -- How do technical considerations help with the evaluation process? -- Evaluating the current IT infrastructure -- Technical differences between community and commercial --0 aContents note continued: New to OSBI -- OSBI expansion -- Integration with non-OS sources -- Implications of trends -- Looking at data integration -- Disparate data sources -- Internal structured data -- Internal unstructured/semistructured data -- External structured data -- External unstructured/semistructured data -- Social network data -- Database technologies and what the differences mean in terms of end-user delivery -- Takeaways -- ch. 14 Understanding integration and data preparation -- Looking at the components of BI -- Why organizations should consider complementary offerings -- Limited capabilities -- Long-term development and internal maintenance -- Integration -- Expansion -- Evaluating the current BI environment -- A brief look at Hadoop -- Integrating OSBI with traditional offerings -- The reality of the market -- ch. 15 Working within an OS environment -- Introduction to developers -- A word about Java -- Development within a community OS environment --0 aContents note continued: Development within a commercial OS environment -- Comparing traditional software offerings and developer roles -- Awareness of future commercial OSBI focus -- Free software access without source code -- Support available to developers -- Community involvement and vendor differences -- Collaboration with other developers -- Participating in vendor software development -- Upgrades, bug fixes, and the list goes on -- Looking ahead at developer requirements -- ch. 16 Required skillsets -- Technical skills -- Java Programming -- IT project management -- Network and database optimization -- Metrics and analytics development -- Data modeling -- Data integration -- Business skills -- Business requirements -- Business unit interrelationships -- Business sponsor -- Business rules expertise -- Navigating the political maze -- Tying it all together -- ch. 17 Technical benefits and challenges --0 aContents note continued: Expanding on the differences in technical versus business benefits and challenges -- A look at the technical benefits of OSBI adoption -- Open standards and integration -- Hardware costs -- Customization potential -- Collaboration -- Community members -- What about commercial OS and free software trials? -- The issue of support and proprietary limitations -- Weighing the benefits against the challenges -- Understanding technical challenges -- What types of challenges exist? -- Potential learning curves in relation to programming languages -- Addressing multiple developers within a single development environment -- Developing a strong data management structure -- Data integration and proprietary software -- Hardware and cost limitations -- Working with OS source code -- Transferring from traditional solutions to OS offerings -- The real time to value -- Understanding the real benefits and challenges of software development --0 aContents note continued: SECTION 6 TAKEAWAYS/RECOMMENDATIONS -- ch. 18 Getting started: A checklist for OSBI readiness -- Business considerations -- Technical considerations -- Putting all the pieces together -- Important OS factors -- Can do with or without -- General conclusion.  aOpen Source BI solutions have many advantages over traditional proprietary software, from offering lower initial costs to more flexible support and integration options; but, until now, there has been no comprehensive guide to the complete offerings of the OS BI market. 0aBusiness intelligencexComputer programs. 0aOpen source intelligence. 0aOpen source software. 0aManagement information systems.1 aDierna, Andrea.  a- 1aHD38.7b.W566 2012llbksz050  aC0bVFL  aHD38.7b.W566 201202595cam  22004697a 4500001001000000003000600010005001700016008004100033010001500074016001800089020002500107020002200132035002100154040004600175042001400221049000900235050002800244082001600272100001900288245007700307250001200384260004300396300003600439500005800475504005100533520035500584505056600939630002601505650004001531650003701571650004601608650004601654700001901700700002301719856009501742856010901837856009401946913000602040945003902046994001202085930002802097796355795OCoLC20150410084416.0120615s2012    caum     b   a  1 0 eng d  a20124053677 a0159560212Uk  a9781449394707 (pbk.)  a1449394701 (pbk.)  a(OCoLC)796355795  aBTCTAbengcBTCTAdDLCdOCLCOdOCLCFdVFL  alccopycat  aVFLL00aQA76.73.C565bE538 201204a005.1332231 aEmerick, Chas.10aClojure programming /cChas Emerick, Brian Carper, and Christophe Grand.  a1st ed.  aSebastopol, Calif. :bO'Reilly,c2012.  axviii, 607 p. :bill. ;c24 cm.  a"Practical Lisp for the Java world"--P. [1] of cover.  aIncludes bibliographical references and index.  a"Clojure programming ... This functional programming language not only lets you take advantage of Java libraries, services, and other JVM resources, it rivals other dynamic languages such as Ruby and Python. With this comprehensive guide, you'll learn Clojure fundamentals with examples that relate it to languages you already know"--P. [4] of cover.0 aDown the rabbit hole -- Functional programming -- Collections and data structures -- Concurrency and parallelism -- Macros -- Datatypes and protocols -- Multimethods -- Organizing and building Clojure projects -- Java and JVM interoperability -- REPL-oriented programming -- Numerics and mathematics -- Design patterns -- Testing -- Using relational databases -- Using nonrelational databases -- Clojure and the Web -- Deploying Clojure web applications -- Choosing Clojure type definition forms wisely -- Introducing Clojure into your workplace -- What's next?00aJava virtual machine. 0aClojure (Computer program language) 0aJava (Computer program language) 0aFunctional programming (Computer science) 0aProgramming lanaguages (Computer science)1 aCarper, Brian.1 aGrand, Christophe.41zTable of contents onlyuhttp://catdir.loc.gov/catdir/enhancements/fy1211/2012405367-t.html42zContributor biographical informationuhttp://catdir.loc.gov/catdir/enhancements/fy1211/2012405367-b.html42zPublisher descriptionuhttp://catdir.loc.gov/catdir/enhancements/fy1211/2012405367-d.html  a- 1aQA76.73.C565bE538 2012llbksz050  aC0bVFL  aQA76.73.C565bE538 201201606cam  2200421 a 4500003000800000005001700008006001900025007001500044008004100059020001800100020003100118040002600149050002800175082001700203100002200220245011900242256002300361260008800384490004100472538004900513500002900562516001000591550005200601530003400653504005100687630002600738650004900764650004600813650003700859700002600896700002900922710002000951830003500971830002701006856013001033913000601163999001501169CtWfDGI20121118014445.0m     o  d        cr zn|        100710s2010    caum    sb   a  1 0 eng d  z9781430272311  a9781430272304 (electronic)  aCtWfDGIbengcCtWfDGI14aQA76.73.C21bV36 2010eb04a005.13/32221 aVanderHart, Luke.10aPractical Clojureh[electronic resource] /cLuke VanderHart, Stuart Sierra ; technical reviewer: Christophe Grand.  aComputer document.  a[Berkeley, Calif.] :bApress,cc2010e(Norwood, Mass. :fBooks24x7.com [generator])1 aThe expert's voice [in] open source.  aMode of access: Internet via World Wide Web.  aTitle from title screen.  aText.  aDigitized and made available by: Books24x7.com.  aAvailable also in a print ed.  aIncludes bibliographical references and index.00aJava virtual machine. 0aProgramming languages (Electronic computers) 0aFunctional programming (Computer science) 0aLISP (Computer program language)1 aSierra, Stuart.4aut.1 aGrand, Christophe.4rev.2 aBooks24x7, Inc. 0aExpert's voice in open source. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=353952httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x701380nam  2200337 a 4500003000700000006001900007007001500026008004100041020001800082020002700100035002200127035002300149035002500172035002300197035002100220040002700241050002600268100002000294245016800314260005000482300003500532500002000567533014700587650004300734650003900777710002000816830003700836856013000873913000601003999003301009MiAaPQm     o  d |      cr cn|||||||||110121s2010    enkm    s    a  1 0 eng d  z9781847196903  z9781847196910 (e-book)  a(MiAaPQ)EBC944048  a(Au-PeEL)EBL944048  a(CaPaEBR)ebr10441081  a(CaONFJC)MIL262407  a(OCoLC)796383663  aMiAaPQcMiAaPQdMiAaPQ 4aQA76.73.G76bD43 20101 aDearle, Fergal.10aGroovy for domain-specific languagesh[electronic resource] :bextend and enhance your Java applications with domain specific languages in Groovy /cFergal Dearle.  aBirmingham, U.K. :bPackt Open Source,c2010.  avi, 295 p. :bill. (some col.)  aIncludes index.  aElectronic reproduction. Ann Arbor, MI : ProQuest, 2015. Available via World Wide Web. Access may be limited to ProQuest affiliated libraries. 0aDomain-specific programming languages. 0aGroovy (Computer program language)2 aProQuest (Firm)  aEbook central (ProQuest) titles.40uhttps://ebookcentral.proquest.com/lib/connectny/detail.action?docID=944048zClick here to view book (ConnectNY ebook project)  ab  aEbook central.bSubscription01496cam  2200397 a 4500003000800000005001700008006001900025007001500044008004100059020001800100020003100118040002600149050002800175082001500203100001900218245009500237256002300332260008600355538004900441500002900490516001000519550005200529530003400581504005100615650004900666650002600715650003700741650005100778650004600829700002500875710002000900830002700920856013000947913000601077999001501083CtWfDGI20121118014344.0m     o  d        cr zn|        090731s2009    caum    sb   a  1 0 eng d  z9781430219897  a9781430219903 (electronic)  aCtWfDGIbengcCtWfDGI14aQA76.73.S23bP65 2009eb04a005.132221 aPollak, David.10aBeginning Scalah[electronic resource] /cDavid Pollak ; technical reviewer, Paul Snively.  aComputer document.  aBerkeley, Calif. :bApress,cc2009e(Norwood, Mass. :fBooks24x7.com [generator])  aMode of access: Internet via World Wide Web.  aTitle from title screen.  aText.  aDigitized and made available by: Books24x7.com.  aAvailable also in a print ed.  aIncludes bibliographical references and index. 0aProgramming languages (Electronic computers) 0aComputer programming. 0aJava (Computer program language) 0aObject-oriented programming (Computer science) 0aFunctional programming (Computer science)1 aSnively, Paul.4rev.2 aBooks24x7, Inc. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=311672httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x701438cam  2200385 a 4500003000800000005001700008006001900025007001500044008004100059020003100100020001800131040002600149050002500175082001600200100002700216245011800243256002300361260008000384538004900464500002900513516001000542550005200552530003400604500002000638650005100658650003400709650003700743650004900780700002500829710002000854830002700874856013000901913000601031999001501037CtWfDGI20121118014411.0m     o  d        cr zn|        091217s2009    nyum    s    a  1 0 eng d  a9781430223702 (electronic)  z9781430223696  aCtWfDGIbengcCtWfDGI14aQA76.64b.B83 2009eb04a005.1172221 aBucanek, James,d1965-10aLearn Objective-C for Java developersh[electronic resource] /cJames Bucanek ; technical reviewer, Evan DiBiase.  aComputer document.  a[New York] :bApress,cc2009e(Norwood, Mass. :fBooks24x7.com [generator])  aMode of access: Internet via World Wide Web.  aTitle from title screen.  aText.  aDigitized and made available by: Books24x7.com.  aAvailable also in a print ed.  aIncludes index. 0aObject-oriented programming (Computer science) 0aC (Computer program language) 0aJava (Computer program language) 0aProgramming languages (Electronic computers)1 aDiBiase, Evan.4rev.2 aBooks24x7, Inc. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=332792httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x701860cam  2200421 a 4500003000800000005001700008006001900025007001500044008004100059020001800100020003100118040002600149050002800175082001700203100002000220245016700240246003700407256002300444260008800467538004900555500030000604500002900904516001000933550005200943530003400995500002001029630002601049650004301075650005101118650002401169650002301193700002401216710002001240830002701260856013001287913000601417999001501423CtWfDGI20121118014414.0m     o  d        cr zn|        100611s2009    nyum    s    a  1 0 eng d  z9781430219798  a9781430219804 (electronic)  aCtWfDGIbengcCtWfDGI14aQA76.73.P75bG74 2009eb04a005.13/32221 aGreenberg, Ira.14aThe essential guide to Processing for Flash developersh[electronic resource] /cIra J. Greenberg ; foreword by Daniel Shiffman ; technical reviewer: David Wicks.30aProcessing for Flash developers.  aComputer document.  a[New York?] :bFriends of ED,cc2009e(Norwood, Mass. :fBooks24x7.com [generator])  aMode of access: Internet via World Wide Web.  a"Use your existing Flash and Actionscript skills to rapidly learn Processing and Java; get up to speed on one of the hottest, creatively-oriented programming languages and environments--with a hands-on project-based approach;explore advanced programming concepts--3D, imaging, emergence and AI."  aTitle from title screen.  aText.  aDigitized and made available by: Books24x7.com.  aAvailable also in a print ed.  aIncludes index.00aFlash (Computer file) 0aProcessing (Computer program language) 0aObject-oriented programming (Computer science) 0aComputer animation. 0aWeb sitesxDesign.1 aWicks, David.4rev.2 aBooks24x7, Inc. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=334222httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x702224nam  2200385Ia 4500003000700000006001900007007001500026008004100041015001900082020002200101020001500123024001800138035002200156035002300178035002500201035002200226035002100248040002700269050002300296082001600319100002600335245007400361260007100435300002400506504005100530505082600581533014701407650002701554650003101581710002001612830003701632856013001669913000601799999003301805MiAaPQm     o  d |      cr cn|||||||||050509s2006    enkm    sb   a  1 0 eng d  aGBA5847082bnb  z0750664711 (pbk.)  z00804564053 z9780750664714  a(MiAaPQ)EBC270004  a(Au-PeEL)EBL270004  a(CaPaEBR)ebr10138749  a(CaONFJC)MIL63910  a(OCoLC)437172644  aMiAaPQcMiAaPQdMiAaPQ 4aQA76.54b.W55 200604a005.2732221 aWilliams, Rob,d1948-10aReal-time systems developmenth[electronic resource] /cRob Williams.  aOxford ;aBurlington, MA :bElsevier Butterworth-Heinemann,c2006.  axii, 455 p. :bill.  aIncludes bibliographical references and index.0 a1. Introduction to real-time systems -- 2. Implementing simple real-time systems -- 3. Basic input and output -- 4. Cyclic executives for bare hardware -- 5. Finite state machines - design tool -- 6. Finite state machines - implementation options -- 7. Why multi-task? -- 8. Task communication and synchronization -- 9. Real-time executives -- 10. Using input/output interfaces -- 11. Structured design for real-time systems -- 12. Designing for multi-tasking -- 13. UML for real-time systems -- 14. Object-oriented approach for real-time systems -- 15. System integrity -- 16. Languages for RTS development - C, Ada and Java -- 17. Cross-development techniques -- 18. Microcontroller embedded systems -- 19. Linux device drivers -- 20. Hardware/software co-design -- App. A. Using an oscilloscope for software debugging.  aElectronic reproduction. Ann Arbor, MI : ProQuest, 2015. Available via World Wide Web. Access may be limited to ProQuest affiliated libraries. 0aReal-time programming. 0aReal-time data processing.2 aProQuest (Firm) 0aEbook central (ProQuest) titles.40uhttps://ebookcentral.proquest.com/lib/connectny/detail.action?docID=270004zClick here to view book (ConnectNY ebook project)  ab  aEbook central.bSubscription01177cam  22003734a 450000100090000000300060000900500170001500800410003201000150007302000220008802000250011002900210013502900170015603500200017304000540019304200080024704900090025505000270026408200170029110000230030824500600033125000120039126000400040330000570044350000200050065000370052065000490055770000230060685600910062991300060072094500380072699400120076493000270077660532455OCoLC20071217091507.0051012s2005    caum         a  1 0 eng    a2005283476  a0596008732 (pbk.)  a9780596008734 (pbk.)1 aNLGGCb2732438881 aNZ1b9972320  a(OCoLC)60532455  aDLCcDLCdVYRdBAKERdJRZdCS1dBTCTAdYDXCPdVFL  apcc  aVFLL00aQA76.73.J38bN545 200500a005.13/32221 aNiemeyer, Patrick.10aLearning Java /cPatrick Niemeyer and Jonathan Knudsen.  a3rd ed.  aSebastopol, CA :bO'Reilly,cc2005.  axx, 954 p. :bill. ;c24 cm. +e1 CD-ROM (4 3/4 in.)  aIncludes index. 0aJava (Computer program language) 0aProgramming languages (Electronic computers)1 aKnudsen, Jonathan.42zPublisher descriptionuhttp://www.loc.gov/catdir/enhancements/fy0715/2005283476-d.html  a- 1aQA76.73.J38bN545 2005llbksz050  aC0bVFL  aQA76.73.J38bN545 200501620nam  2200433Ia 4500003000700000006001900007007001500026008004100041010001500082015001900097016001800116020001500134020002200149035002200171035002300193035002500216035002200241035002100263040002700284050002300311082001700334100002000351245010500371250001200476260003400488300002600522500002000548533014700568650005700715650003700772650007800809650005300887700002000940710002000960830003700980856013001017913000601147999003301153MiAaPQm     o  d |      cr cn|||||||||050118s2005    caum    s    a  1 0 eng d  z2005920774  aGBA5011072bnb7 z0130745302Uk  z0782150608  z0782144195 (pbk.)  a(MiAaPQ)EBC267258  a(Au-PeEL)EBL267258  a(CaPaEBR)ebr10131943  a(CaONFJC)MIL52133  a(OCoLC)936833396  aMiAaPQcMiAaPQdMiAaPQ 4aQA76.3b.H438 200504a005.13/32221 aHeller, Philip.10aComplete Java 2 certificationh[electronic resource] :bstudy guide /cPhilip Heller, Simon Roberts.  a5th ed.  aAlameda, CA :bSybex,cc2005.  axxxii, 526 p. :bill.  aIncludes index.  aElectronic reproduction. Ann Arbor, MI : ProQuest, 2015. Available via World Wide Web. Access may be limited to ProQuest affiliated libraries. 0aElectronic data processing personnelxCertification. 0aJava (Computer program language) 0aProgramming languages (Electronic computers)xExaminationsvStudy guides. 0aComputer softwarevExaminations, questions, etc.1 aRoberts, Simon.2 aProQuest (Firm) 0aEbook central (ProQuest) titles.40uhttps://ebookcentral.proquest.com/lib/connectny/detail.action?docID=267258zClick here to view book (ConnectNY ebook project)  ab  aEbook central.bSubscription01287nam  2200361Ia 4500003000700000006001900007007001500026008004100041010001500082020001500097020001500112035002200127035002300149035002500172035002200197035002100219040002700240050002700267082001700294100002000311245006200331260003600393300002300429500002000452533014700472650003700619650004300656710002000699830003700719856013000756913000600886999003300892MiAaPQm     o  d |      cr cn|||||||||041115s2004    caum    s    a  1 0 eng d  z2004109314  z0782151159  z0782143733  a(MiAaPQ)EBC267312  a(Au-PeEL)EBL267312  a(CaPaEBR)ebr10131918  a(CaONFJC)MIL52228  a(OCoLC)781252932  aMiAaPQcMiAaPQdMiAaPQ 4aQA76.73.J38bG735 200404a005.13/32221 aGreanier, Todd.10aJava foundationsh[electronic resource] /cTodd Greanier.  aSan Francisco :bSybex,cc2004.  axv, 347 p. :bill.  aIncludes index.  aElectronic reproduction. Ann Arbor, MI : ProQuest, 2015. Available via World Wide Web. Access may be limited to ProQuest affiliated libraries. 0aJava (Computer program language) 0aObject-oriented programming languages.2 aProQuest (Firm) 0aEbook central (ProQuest) titles.40uhttps://ebookcentral.proquest.com/lib/connectny/detail.action?docID=267312zClick here to view book (ConnectNY ebook project)  ab  aEbook central.bSubscription01374nam  2200373Ia 4500003000700000006001900007007001500026008004100041010001500082020001500097020001800112020001800130035002200148035002300170035002500193035002300218035002100241040002700262050002900289082001700318245009400335260004400429300002600473500002000499533014700519650003700666650004300703700002800746710002000774830003700794856013000831913000600961999003300967MiAaPQm     o  d |      cr cn|||||||||030205s2003    inum    s    a  1 0 eng d  z2003101921  z0764539663  z9780764539664  z9780764555749  a(MiAaPQ)EBC818687  a(Au-PeEL)EBL818687  a(CaPaEBR)ebr10510614  a(CaONFJC)MIL337428  a(OCoLC)772398050  aMiAaPQcMiAaPQdMiAaPQ 4aQA76.73.J38bJ35942 200304a005.13/322200aJava 2 enterprise edition 1.4 bibleh[electronic resource] /cJames McGovern ... [et al.]  aIndianapolis, IN :bWiley Pub.,cc2003.  axxxii, 976 p. :bill.  aIncludes index.  aElectronic reproduction. Ann Arbor, MI : ProQuest, 2015. Available via World Wide Web. Access may be limited to ProQuest affiliated libraries. 0aJava (Computer program language) 0aObject-oriented programming languages.1 aMcGovern, James,d1967-2 aProQuest (Firm)  aEbook central (ProQuest) titles.40uhttps://ebookcentral.proquest.com/lib/connectny/detail.action?docID=818687zClick here to view book (ConnectNY ebook project)  ab  aEbook central.bSubscription01901cam  2200373Ia 450000100090000000300060000900500170001500800410003202000220007304000280009504900090012309000280013209600280016010000240018824500690021225000120028126000400029330000360033350000200036950000240038950000430041350000470045650507420050363000270124565000390127265000390131165000490135065000250139970000180142491300060144294500390144899400120148793000280149950775680OCoLC20030317082923.0021014s2002    caum         a  1 0 eng d  a0596003811 (pbk.)  aWIYcWIYdCUSdWCMdVFL  aVFLL  aQA76.73.P257bF483 2002  aQA 76.73 P258bF48 20021 aFeuerstein, Steven.10aOracle PL/SQL programming /cSteven Feuerstein with Bill Pribyl.  a3rd ed.  aSebastopol, CA :bO'Reilly,cc2002.  axxiii, 989 p. :bill. ;c24 cm.  aIncludes index.  aPrevious ed.: 1997.  a"Oracle development languages"--Cover.  a"Covers versions through Oracle9i"--Cover.2 aProgramming in PL/SQL. Introduction to PL/SQL ; Creating and running PL/SQL code ; Language fundamentals -- PL/SQL program structure. Conditional and sequential control ; Iterative processing with loops ; Exception handlers -- PL/SQL program data. Working with program data ; Strings ; Numbers ; Dates and timestamps ; Records and collections ; Miscellaneous datatypes -- SQL in PL/SQL. DML and transaction management ; Data retrieval ; Dynamic SQL and dynamic PL/SQL -- PL/SQL application construction. Procedures, functions, and parameters ; Packages ; Triggers ; Managing PL/SQL applications -- Advanced PL/SQL topics. PL/SQL's runtime architecture ; Object-oriented aspects of PL/SQL ; Calling Java from PL/SQL ; External procedures.00aOracle (Computer file) 0aPL/SQL (Computer program language) 0aQuery languages (Computer science) 0aProgramming languages (Electronic computers) 0aDatabase management.1 aPribyl, Bill.  a- 1aQA76.73.P257bF483 2002llbksz090  aX0bVFL  aQA76.73.P257bF483 200203237cam  22003618a 450000100090000000300060000900500170001500800410003201500150007302000220008804000350011004900090014508200170015409000260017109000260019710000230022324501170024625000120036326000620037530000240043750000200046150521350048163000320261665000620264865000360271070000190274671000140276591300060277990700150278594500370280099400120283793000260284948154366OCoLC20050314000000.0011006s2002    cc m     f   a  1 0 eng    aGBA1-V1579  a0596002653 (pbk.)  aUKMcUKMdCUSdWEAdVFLdOrPss  aVFLL04a005.7585221  aQA76.73.S67bW54 2002  aQA76.73.S67bW54 20021 aWidenius, Michael.10aMySQL reference manual :bdocumentation from the source /cMichael "Monty" Widenius, David Axmark, and MySQL AB.  a1st ed.  aBeijin
g ;aCambridge :bO'Reilly Community Press,cc2002.  ax, 802 p. ;c24 cm.  aIncludes index.00tHow Standards-Compatible Is MySQL? --tMySQL and the Future (the TODO) --tHow MySQL Compares to Other Databases --tMySQL Installation --tQuick Standard Installation of MySQL --tInstalling a MySQL Source Distribution --tPost-Installation Setup and Testing --tUpgrading/Downgrading MySQL --tOperating System-Specific Notes --tPerl Installation Comments --tTutorial Introduction --tConnecting to and Disconnecting from the Server --tEntering Queries --tCreating and Using a Database --tGetting Information About Databases and Tables --tExamples of Common Queries --tUsing mysql in Batch Mode --tQueries from Twin Project --tUsing MySQL with Apache --tDatabase Administration --tConfiguring MySQL --tGeneral Security Issues and the MySQL Access Privilege System --tMySQL User Account Management --tDisaster Prevention and Recovery --tDatabase Administration Language Reference --tMySQL Localisation and International Usage --tMySQL Server-Side Scripts and Utilities --tMySQL Client-Side Scripts and Utilities --tThe MySQL Log Files --tReplication in MySQL --tMySQL Optimisation --tOptimisation Overview --tOptimising SELECTs and Other Queries --tLocking Issues --tOptimising Database Structure --tOptimising the MySQL Server --tDisk Issues --tMySQL Language Reference --tLanguage Structure --tColumn Types --tFunctions for Use in SELECT and WHERE Clauses --tData Manipulation: SELECT, INSERT, UPDATE, DELETE --tData Definition: CREATE, DROP, ALTER --tBasic MySQL User Utility Commands --tMySQL Transactional and Locking Commands --tMySQL Full-Text Search --tMySQL Query Cache --tMySQL Table Types --tMyISAM Tables --tMERGE Tables --tISAM Tables --tHEAP Tables --tInnoDB Tables --tBDB or Berkeley_DB Tables --tMySQL APIs --tMySQL PHP API --tMySQL Perl API --tMySQL ODBC Support --tMySQL C API --tMySQL C++ APIs --tMySQL Java Connectivity (JDBC) --tMySQL Python APIs --tMySQL Tcl APIs --tMySQL Eiffel Wrapper --tExtending MySQL --tMySQL Internals --tAdding New Functions to MySQL --tAdding New Procedures to MySQL --tProblems and Common Errors --tContributed Programs.00aMYSQL (Electronic resource) 0aSQL (Computer program language)vHandbooks, manuals, etc. 0aComputer programming languages.1 aAxmark, David.2 aMySQL AB.  a-  a.b12436884 1aQA76.73.S67bW54 2002llbksz090  aX0bVFL  aQA76.73.S67bW54 200201593cam  2200409 a 4500003000800000005001700008006001900025007001500044008004100059020001500100040002100115050002700136082001700163100003000180245014000210246004000350246004500390256002300435260008900458500003300547500002900580500004100609504005100650516001000701530003400711538004900745550005300794650003700847650003100884700003300915700003800948710002000986830002701006856012901033913000601162999001501168CtWfDGI20121118013843.0m     o  d        cr zn|        020828s2002    nyum    sb   a  1 0 eng d  z0471384291  aCtWfDGIcCtWfDGI14aQA76.73.J38bG76 2002b04a005.13/32211 aGrose, Timothy J.,d1965-10aMastering XMIh[electronic resource] :bJava programming with XMI, XML, and UML /cTimothy J. Grose, Gary C. Doney, Stephen A. Brodsky.3 aMastering XML Metadata Interchange.3 aJava programming with XMI, XML, and UML.  aComputer document.  aNew York :bJohn Wiley & Sons,cc2002e(Norwood, Mass. :fBooks24x7.com [generator])  a"Wiley Computer Publishing."  aTitle from title screen.  aIncludes link to companion web site.  aIncludes bibliographical references and index.  aText.  aAvailable also in a print ed.  aMode of access: Internet via World Wide Web.  aDigitized and made available by: Books 24x7.com. 0aJava (Computer program language) 0aDocument markup languages.1 aDoney, Gary C.,d1962-4aut.1 aBrodsky, Stephen A.,d1965-4aut.2 aBooks24x7, Inc. 0aBooks 24x7 collection.7 uhttp://0-www.books24x7.com.library.lemoyne.edu/marc.asp?bookid=25622httpzClick here to view book (Le Moyne community only)  ab  aBooks 24x701212cam  22004094a 450000100090000000300060000900500170001500800410003201000130007302000220008602000250010802900210013302900190015402900170017302900220019003500200021204000460023204200080027804900090028605000260029508200170032108400150033810000180035324500880037126000500045930000360050965000370054565000360058265000430061865000190066170000170068070000240069791300060072194500370072799400120076493000260077644774953OCoLC20081016080542.0000804s2001    maum         a  1 0 eng    a00062547  a0763710644 (pbk.)  a9780763710644 (pbk.)1 aNLGGCb2020342831 aYDXCPb16331671 aNZ1b58102171 aAU@b000021714398  a(OCoLC)44774953  aDLCcDLCdNLGGCdBAKERdBTCTAdYDXCPdVFL  apcc  aVFLL00aQA76.73.J38bD34 200100a005.13/3221  a54.532bcl1 aDale, Nell B.10aIntroduction to Java and software design /cNell Dale, Chip Weems, Mark Headington.  aSudbury, Mass. :bJones and Bartlett,cc2001.  axxiii, 771 p. :bill. ;c22 cm. 0aJava (Computer program language) 0aComputer softwarexDevelopment. 0aObject-oriented programming languages. 0aSystem design.1 aWeems, Chip.1 aHeadington, Mark R.  a- 1aQA76.73.J38bD34 2001llbksz050  aC0bVFL  aQA76.73.J38bD34 200101380cam  22004094a 450000100090000000300060000900500170001500800410003201000130007302000210008604000330010704200080014004900090014808200170015709000270017409000270020110000210022824500970024925000120034626000540035830000340041244000250044649000210047150000220049250000420051450501220055665000370067865000490071565000510076465000170081583000400083291300060087290700150087894500380089399400120093193000270094344885188OCoLC20020321082710.0000822s2000    cc m         a  1 0 eng    a00045274  z0596000391(pbk.)  aDLCcDLCdOCLdC#PdMLXdVFL  apcc  aVFLL00a005.13/3221  aQA76.73.J38bF551 2000  aQA76.73.J38bF551 20001 aFlanagan, David.10aJava examples in a nutshell :ba tutorial companion to Java in a nutshell /cDavid Flanagan.  a2nd ed.  aBeijing ;aCambridge [Mass.] :bO'Reilly,cc2000.  axvi, 566 p. :bill. ;c23 cm. 2aA nutshell handbook.1 aThe Java series.  aIncludes indexes.  a"Covers Java 2 version 1.3."-- Cover.2 aCore Java APIs -- Java basics -- Security and cryptography -- Graphics and GUIs -- Applets -- Enterprise Java -- XML. 0aJava (Computer program language) 0aProgramming languages (Electronic computers) 0aObject-oriented programming (Computer science) 0aWeb servers. 0aJava series (O'Reilly & Associates)  a-  a.b1209898x 1aQA76.73.J38bF551 2000llbksz090  aX0bVFL  aQA76.73.J38bF551 200001313cam  22003614a 450000100090000000300060000900500170001500800410003201000130007301500150008601900130010102000220011404000280013604200080016404900090017205000260018105000260020708200170023310000260025024500550027626000370033130000360036850400510040450502880045565000370074365000490078065000260082991300060085590700150086194500370087699400120091393000260092542892270OCoLC20020226083618.0991123s2000    nyum     b   a  1 0 eng    a99059403  aGBA1-24749  a46808607  a0393974375 (pbk.)  aDLCcDLCdMLXdUKMdVFL  apcc  aVFLL00aQA76.73.J38bK56 2000  aQA76.73.J38bK56 200000a005.13/32211 aKing, K. N.q(Kim N.)10aJava programmingbfrom the beginning /cK.N. King.  aNew York :bW.W. Norton,cc2000.  axxiii, 788 p. :bill. ;c23 cm.  aIncludes bibliographical references and index.0 aGetting started -- Writing Java programs -- Classes and objects -- Basic control structures -- Arrays -- Graphics -- Class variables and methods -- More control structures -- Primitive types -- Writing classes -- Subclasses -- The abstract window toolkit -- Data structures -- Files. 0aJava (Computer program language) 0aProgramming languages (Electronic computers) 0aComputer programming.  a-  a.b12101485 1aQA76.73.J38bK56 2000llbksz050  aX0bVFL  aQA76.73.J38bK56 200000988nam  2200313Ia 450000100090000000300060000900500170001500800410003202000220007304000180009504900090011309000270012209200200014910000210016924500460019024600530023626000400028930000330032944000460036250000200040865000370042865000510046565000490051665000260056591300060059194500380059799400120063593000270064754363839OCoLC20040930081412.0040206s2000    caum         a  1 0 eng d  a1590591461 (pbk.)  aHUAcHUAdVFL  aVFLL  aQA76.73.J38bB374 2000  a005.133bJ4 B251 aBarker, Jacquie.10aBeginning Java objects /cJacquie Barker.34aBeginning Java objects :bfrom concepts to code.  aBerkeley, Calif. :bApress,cc2000.  axi, 665 p. :bill. ;c23 cm. 0aBooks for professionals by professionals.  aIncludes index. 0aJava (Computer program language) 0aObject-oriented programming (Computer science) 0aProgramming languages (Electronic computers) 0aComputer programming.  a- 1aQA76.73.J38bB374 2000llbksz090  aX0bVFL  aQA76.73.J38bB374 200001291cam  2200361 a 450000100090000000300060000900500170001500800410003201000130007302000320008604000230011804900090014105000230015005000230017305000230019608200170021910000200023624501060025625000120036226000460037430000790042044000210049953801480052065000510066865000370071965000260075665000490078270000200083191300060085190700150085794500340087293000230090637917342OCoLC19980702090233.0971103s1998    maum         a  1 0 eng    a97043574  a0201310074 (pbk.) :c$43.65  aDLCcDLCdC#PdVFL  aVFLL00aQA76.64b.C35 1998  aQA76.64b.C35 1998  aQA76.64b.C35 199800a005.13/32211 aCampione, Mary.14aThe Java tutorial :bobject-oriented programming for the Internet /cMary Campione and Kathy Walrath.  a2nd ed.  aReading, Mass. :bAddison-Wesley,cc1998.  axix, 964 p. :bill. ;c24 cm. +e1 computer laser optical disc (4 3/4 in.) 4aThe Java series.  aSystem requirements: Intel x86 or compatible, or SPARC ; Windows 95/NT 4.0 or Solaris 2.5 on Intel x86 machines or Solaris 2.4 or 2.5 on SPARC. 0aObject-oriented programming (Computer science) 0aJava (Computer program language) 0aInternet programming. 0aProgramming languages (Electronic computers)1 aWalrath, Kathy.  a-  a.b11747249 1aQA76.64b.C35 1998llbksz050  aQA76.64b.C35 199801091cam  2200325 a 450000100090000000300060000900500170001500800410003201000130007302000510008604000180013704900090015505000260016405000260019008200170021610000200023324500940025326000500034730000320039744000210042950400510045050500610050165000370056265000490059970000260064891300060067490700150068094500370069593000330073234558849OCoLC19980702085044.0960403m19969999maum     b   a  1 0 eng    a96015915  a0201634538 (v. 1 : pbk.: alk. paper) :c$38.90  aDLCcDLCdVFL  aVFLL00aQA76.73.J38bG67 1996  aQA76.73.J38bG67 199600a005.13/32201 aGosling, James.14aThe Java application programming interface /cJames Gosling, Frank Yellin, the Java team.  aReading, Mass :bAddison-Wesley Publ.,c1996-  av. <1-2 > :bill. ;c24 cm. 4aThe Java series.  aIncludes bibliographical references and index.0 av. 1. Core packages -- v. 2. Window toolkit and applets. 0aJava (Computer program language) 0aProgramming languages (Electronic computers)1 aYellin, Frank,d1958-  a-  a.b11747237 1aQA76.73.J38bG67 1996llbksz050  aQA76.73.J38bG67 1996vv.v.103457nam  2200409Ia 450000100090000000300060000900500170001500800410003202000220007304000200009504900090011509000270012409000270015109000270017810000190020524501000022424600550032425000120037926000250039130000350041650000280045150000660047950000200054550521490056563000320271465000360274665000490278270000230283170000220285470000220287685600510289891300060294990700150295594500380297099400120300893000270302049970203OCoLC20040521000000.0020611s2002    cc m         a  1 0 eng d  a0596002114 (pbk.)  aVFLcVFLdOrPss  aVFLL  aQA76.73.S67bR43 2002b  aQA76.73.S67bR43 2002b  aQA76.73.S67bR43 2002b1 aReese, George.10aManaging and using MySQL /cGeorge Reese, Randy Jay Yarger and Tim King, with Hugh E. Williams.1 iTitle on spine and cover:aManaging & using MySQL.  a2nd ed.  aBeijing :bO'Reilly,  axiii, 425 p. :bill. ;c24 cm.  a"Covers version 4.0.1."  a"Hugh Williams contributed the two chapters on PHP."--p. xii.  aIncludes index.00tMySQL --tRelational Databases --tThe History of MySQL --tMySQL Design --tMySQL Features --tMySQL Applications --tWhat You Get --tInstallation --tPreparation --tUnix Installation --tWindows Installation --tSQL According to MySQL --tSQL Basics --tDatabase Creation --tTable Management --tMySQL Data Types --tIndexing --tManaging Data --tQueries --tSQL Operators --tAdvanced Features --tDatabase Administration --tConfiguration --tServer Startup and Shutdown --tLogging --tBackup --tRecovery --tTable Maintenance and Crash Recovery --tMySQL Administration --tPerformance Tuning --tAn Approach to Performance Tuning --tApplication Tuning --tDatabase Server Tuning --tOperating System/Hardware Tuning --tSecurity --tDatabase Security --tSystem Security --tApplication Security --tDatabase Design --tDatabase Design Primer --tNormalization --tA Logical Data-Modeling Methodology --tPhysical Database Design --tMySQL Programming --tDatabase Applications --tArchitecture --tConnections and Transactions --tObject/Relational Modeling --tPerl --tIntroduction to DBI --tDBI and CGI --tA General Model for Maintainable Perl Programs --tPython --tDB-API --tProprietary Operations --tApplied DB-API --tPHP --tIntroducing PHP --tInstalling PHP --tAccessing the MySQL DBMS with PHP --tSecuring User Data --tManaging Sessions --tWriting Data with PHP --tUsing the HTML [left angle bracket]form[right angle bracket] Environment --tWhere to Find Out More --tCAPI --tAPI Overview --tThe C API in Practice --tAdvanced Issues --tJava --tThe JDBC API --tSimple Database Access --tDynamic Database Access --tA Guest Book Servlet --tExtending MySQL --tUser-Defined Functions --tAlternative Character Sets --tMySQL Reference --tSQL Syntax for MySQL --tBasic Syntax --tSQL Commands --tMySQL Data Types --tNumeric Data Types --tString Data Types --tDate Data Types --tComplex Data Types --tOperators and Functions --tOperators --tFunctions --tMySQL PHP API Reference --tData Types --tFunctions --tC Reference --tData types --tFunctions --tThe Python DB-API --tModule: MySQLdb. 0aMySQL (Electronic resource) 0aSQL (Computer program language) 0aProgramming languages (Electronic computers)1 aYarger, Randy Jay.1 aKing, Tim,d1954-1 aWilliams, Hugh E.41zOnline reference manualuhttp://www.mysqul.com  a-  a.b12098802 1aQA76.73.S67bR43 2002bllbksz090  aX0bVFL  aQA76.73.S67bR43 2002b05426pam  22003974a 450000100090000000300060000900500170001500800410003201000130007302000220008604000250010804200080013304900090014105000250015005000250017508200140020010000230021424500790023725000320031626000450034830000370039350000480043050400640047850542160054265000420475865000390480065000340483965000230487365000180489670000200491491300060493490700150494094500360495599400120499193000250500348074498OCoLC20040521000000.0010926s2002    maum     b   a  1 0 eng    a01052375  a0596000456 (pbk.)  aDLCcDLCdVFLdOrPss  apcc  aVFLL00aTK5105.59b.G37 2002  aTK5105.59b.G37 200200a005.82211 aGarfinkel, Simson.10aWeb security, privacy and commerce /cSimson Garfinkel with Gene Spafford.  a2nd ed. expanded & updated.  aBeijing ;aCambridge, Mass. :bO'Reilly,  axxviii, 756 p. :bill. :c24 cm.  aRev. ed. of: Web security & commerce. 1997.  aIncludes bibliographical references (p. 716-734) and index.00tWeb Technology --tThe Web Security Landscape --tThe Web Security Problem --tRisk Analysis and Best Practices --tThe Architecture of the World Wide Web --tHistory and Terminology --tA Packet's Tour of the Web --tWho Owns the Internet? --tCryptography Basics --tUnderstanding Cryptography --tSymmetric Key Algorithms --tPublic Key Algorithms --tMessage Digest Functions --tCryptography and the Web --tCryptography and Web Security --tWorking Cryptographic Systems and Protocols --tWhat Cryptography Can't Do --tLegal Restrictions on Cryptography --tUnderstanding SSL and TLS --tWhat Is SSL? --tSSL: The User's Point of View --tDigital Identification I: Passwords, Biometrics, and Digital Signatures --tPhysical Identification --tUsing Public Keys for Identification --tReal-World Public Key Examples --tDigital Identification II: Digital Certificates, CAs, and PKI --tUnderstanding Digital Certificates with PGP --tCertification Authorities: Third-Party Registrars --tPublic Key Infrastructure --tOpen Policy Issues --tPrivacy and Security for Users --tThe Web's War on Your Privacy --tUnderstanding Privacy --tUser-Provided Information --tLog Files --tUnderstanding Cookies --tWeb Bugs --tPrivacy-Protecting Techniques --tChoosing a Good Service Provider --tPicking a Great Password --tCleaning Up After Yourself --tAvoiding Spam and Junk Email --tIdentity Theft --tPrivacy-Protecting Technologies --tBlocking Ads and Crushing Cookies --tAnonymous Browsing --tSecure Email --tBackups and Antitheft --tUsing Backups to Protect Your Data --tPreventing Theft --tMobile Code I: Plug-Ins, ActiveX, and Visual Basic --tWhen Good Browsers Go Bad --tHelper Applications and Plug-ins --tMicrosoft's ActiveX --tThe Risks of Downloaded Code --tMobile Code II: Java, JavaScript, Flash, and Shockwave --tJava --tJavaScript --tFlash and Shockwave --tWeb Server Security --tPhysical Security for Servers --tPlanning for the Forgotten Threats --tProtecting Computer Hardware --tProtecting Your Data --tPersonnel --tStory: A Failed Site Inspection --tHost Security for Servers --tCurrent Host Security Problems --tSecuring the Host Computer --tMinimizing Risk by Minimizing Services --tOperating Securely --tSecure Remote Access and Content Updating --tFirewalls and the Web --tSecuring Web Applications --tA Legacy of Extensibility and Risk --tRules to Code By --tSecurely Using Fields, Hidden Fields, and Cookies --tRules for Programming Languages --tUsing PHP Securely --tWriting Scripts That Run with Additional Privileges --tConnecting to Databases --tDeploying SSL Server Certificates --tPlanning for Your SSL Server --tCreating SSL Servers with FreeBSD --tInstalling an SSL Certificate on Microsoft IIS --tObtaining a Certificate from a Commercial CA --tWhen Things Go Wrong --tSecuring Your Web Service --tProtecting Via Redundancy --tProtecting Your DNS --tProtecting Your Domain Registration --tComputer Crime --tYour Legal Options After a Break-In --tCriminal Hazards --tCriminal Subject Matter --tSecurity for Content Providers --tControlling Access to Your Web Content --tAccess Control Strategies --tControlling Access with Apache --tControlling Access with Microsoft IIS --tClient-Side Digital Certificates --tClient Certificates --tA Tour of the VeriSign Digital ID Center --tCode Signing and Microsoft's Authenticode --tWhy Code Signing? --tMicrosoft's Authenticode Technology --tObtaining a Software Publishing Certificate --tOther Code Signing Methods --tPornography, Filtering Software, and Censorship --tPornography Filtering --tPICS --tRSACi --tPrivacy Policies, Legislation, and P3P --tPolicies That Protect Privacy and Privacy Policies --tChildren's Online Privacy Protection Act --tP3P --tDigital Payments --tCharga-Plates, Diners Club, and Credit Cards --tInternet-Based Payment Systems --tHow to Evaluate a Credit Card Payment System --tIntellectual Property and Actionable Content --tCopyright --tPatents --tTrademarks --tActionable Content --tLessons from Vineyard.NET --tThe SSL/TLS Protocol --tP3P: The Platform for Privacy Preferences Project --tThe PICS Specification. 0aComputer networksxSecurity measures. 0aWorld Wide WebxSecurity measures. 0aWeb sitesxSecurity measures. 0aComputer security. 0aCryptography.1 aSpafford, Gene.  a-  a.b12098966 1aTK5105.59b.G37 2002llbksz050  aX0bVFL  aTK5105.59b.G37 200202324cam  2200421Ia 450000100090000000300060000900500170001500800410003201000130007302000150008604000350010104900090013609000240014509000240016909000240019309200140021710000170023124501890024826000330043730000240047050400640049450507070055865000360126565000240130165000360132565000260136165000260138765000260141365000200143965000490145991300060150890501510151490501510166590700150181694500350183199400120186693000240187848197889OCoLC20040521000000.0011023s2001    nyum     b   a  1 0deng d  a01275993  a0465042252  aDPLcDPLdDDGdNGUdVFLdOrPss  aVFLL  aQA76.2.A2bL64 2001  aQA76.2.A2bL64 2001  aQA76.2.A2bL64 20010 a005.12211 aLohr, Steve.10aGo to :bthe story of the math majors, bridge players, engineers, chess wizards, maverick scientists and iconoclasts, the programmers who created the software revolution /cSteve Lohr.  aNew York, NY :bBasic Books,  ax, 250 p. ;c24 cm.  aIncludes bibliographical references (p. 239-242) and index.00tIntroduction: The Rise of Software and the Programming Art --tFortran: The Early "Turning Point" --tThe Hard Lessons of the Sixties: From Exuberance to the Realities of COBOL and the IBM 360 Project --tBreaking Big Iron's Grip: Unix and C --tProgramming for the Millions: The BASIC Story from Dartmouth to Visual Basic --tThe European Influence: From Algol to Pascal to C++ --tA Computer of My Own: The Beginning of the PC Industry and the Story of Word --tComputing for the Masses: The Long Road to "Gooey" and the Macintosh --tProgramming for Everyman: Just Let the Users Do It --tJava: The Messy Birth of a New Language --tThere Has To Be a Better Way: Apache and the Open Source Movement. 0aComputer scientistsvBiography. 0aComputersxHistory. 0aComputer softwarexDevelopment. 0aComputer programming. 0aComputer programmers. 0aSoftware engineering. 0aMicrocomputers. 0aProgramming languages (Electronic computers)  a-  aSteve Lohr is senior writer and technology correspondent for the New York Times, and is co-author of U.S. vs. Microsoft. He lives is New York City  aSteve Lohr is senior writer and technology correspondent for the New York Times, and is co-author of U.S. vs. Microsoft. He lives is New York City  a.b12102799 1aQA76.2.A2bL64 2001llbksz090  aX0bVFL  aQA76.2.A2bL64 200103547cam  22003734a 450000100090000000300060000900500170001500800410003201500150007302000220008804000400011004200080015004900090015805000270016708200180019410000210021224500710023325000120030426000430031630000340035950000220039350000300041550000240044550524520046965000370292165000170295865000510297565000490302691300060307590700150308194500380309699400120313493000270314649044523OCoLC20040521000000.0020214s2002    caum         a  1 0 eng    aGBA2-Y6744  a0596002831 (pbk.)  aUKMcUKMdCUSdUOKdDAYdVFLdOrPss  apcc  aVFLL 4aQA76.73.J38bF553 200204a005.712622211 aFlanagan, David.10aJava in a nutshell :ba desktop quick reference /cDavid Flanagan.  a4th ed.  aBeijing ;aSebastopol, CA :bO'Reilly,  axxi, 969 p. :bill. ;c23 cm.  aIncludes indexes.  a"Covers Java 1.4"--Cover.  aPrevious ed.: 1999.00tWhat Is Java? --tKey Benefits of Java --tAn Example Program --tJava Syntax from the Ground Up --tThe Unicode Character Set --tIdentifiers and Reserved Words --tPrimitive Data Types --tExpressions and Operators --tStatements --tMethods --tClasses and Objects --tArray Types --tReference Types --tPackages and the Java Namespace --tJava File Structure --tDefining and Running Java Programs --tDifferences Between C and Java --tObject-Oriented Programming in Java --tThe Members of a Class --tCreating and Initializing Objects --tDestroying and Finalizing Objects --tSubclasses and Inheritance --tData Hiding and Encapsulation --tAbstract Classes and Methods --tInterfaces --tInner Class Overview --tStatic Member Classes --tMember Classes --tLocal Classes --tAnonymous Classes --tHow Inner Classes Work --tModifier Summary --tC++ Features Not Found in Java --tThe Java Platform --tJava Platform Overview --tStrings and Characters --tNumbers and Math --tDates and Times --tArrays --tCollections --tTypes, Reflection, and Dynamic Loading --tThreads --tFiles and Directories --tInput and Output Streams --tNetworking --tProperties and Preferences --tLogging --tThe New I/O API --tXML --tProcesses --tSecurity --tCryptography --tJava Security --tSecurity Risks --tJava VM Security and Class File Verification --tAuthentication and Crytography --tAccess Control --tSecurity for Everyone --tPermission Classes --tJavaBeans --tBean Basics --tJavaBeans Conventions --tBean Contexts and Services --tJava Programming and Documentation Conventions --tNaming and Capitalization Conventions --tPortability Conventions and Pure Java Rules --tJava Documentation Comments --tJava Development Tools --tappletviewer --textcheck --tjar --tjarsigner --tjava --tjavac --tjavadoc --tjavah --tjavap --tjdb --tkeytool --tnative2ascii --tpolicytool --tserialver --tjava.beans and java.beans.beancontext --tjava.io --tjava.lang, java.lang.ref, and java.lang.reflect --tjava.math --tjava.net --tjava.nio and Subpackages --tjava.security and Subpackages --tjava.text --tjava.util and Subpackages --tjavax.crypto and Subpackages --tjavax.net and javax.net.ssl --tjavax.security.auth and Subpackages --tjavax.xml.parsers, java.xml.transform, and Subpackages --torg.ietf.jgss --torg.w3c.dom --torg.xml.sax, org.xml.sax.ext, and org.xml.sax.helpers --tClass, Method, and Field Index. 0aJava (Computer program language) 0aWeb servers. 0aObject-oriented programming (Computer science) 0aProgramming languages (Electronic computers)  a-  a.b12265962 1aQA76.73.J38bF553 2002llbksz050  aX0bVFL  aQA76.73.J38bF553 200212314cam  2200457 a 450000100090000000300060000900500170001500800410003201000150007301500150008802000220010304000570012504200080018204900090019005000240019908200160022310000300023924500870026924600310035626000570038730000790044450400680052350599820059150505611057353803161113465000261145065000201147665000251149665000451152165000521156665000461161865000261166465000261169070000201171670000271173691300061176390700151176994500361178499400121182093000241183244736825OCoLC20040521000000.0000802s2001    njum     b   a  1 0 eng    a2001274790  aGBA0-W7930  a013028419X (pbk.)  aUKMcUKMdOCLdTXAdDLCdMUQdIQUdOCLCQdVFLdOrPss  apcc  aVFLL 4aQA76.625b.D45 200104a005.2762211 aDeitel, Harvey M.,d1945-10aE-business & e-commerce :bhow to program /cH.M. Deitel, P.J. Deitel, T.R. Nieto.3 aE-business and e-commerce.  aUpper Saddle River, N.J. ;aLondon :bPrentice Hall,  axlv, 1254 p. :bcol. ill. ;c24 cm. +e1 computer optical disc (4 3/4 in.)  aIncludes bibliographical references (p. [1201]-1207) and index.00tThe Future of Computing --te-Business and e-Commerce --tWhat is a Computer? --tTypes of Programming Languages --tOther High-Level Languages --tStructured Programming --tHistory of the Internet --tPersonal Computing, Distributed Computing and Client/Server Computing --tHistory of the World Wide Web --tHardware Trends --tThe Key Software Trend: Object Technology --tJavaScript: Object-Based Scripting for the Web --tBrowser Portability --tEvolution of the How to Program Series: C and C++ --tJava and Java How to Program --tInternet and World Wide Web How to Program --te-Business and e-Commerce How to Program --tDynamic HTML --tA Tour of the Book --tIntroduction to Internet Explorer 5 and the World Wide Web --tConnecting to the Internet --tFeatures of Internet Explorer 5 --tSearching the Internet --tOnline Help and Tutorials --tKeeping Track of Your Favorite Sites --tFTP (File Transfer Protocol) --tOutlook Express and Electronic Mail --tOutlook Express and Newsgroups --tUsing FrontPage Express to Create Web Pages --tNetMeeting and Chat --tControlling the Details --tPlug-ins --te-Business Models --tStorefront Model --tAuction Model --tPortal Model --tDynamic Pricing Models --tB2B Exchanges --tB2B Service Providers --tOnline Trading and Lending Models --tGetting a Loan Online --tRecruiting on the Web --tOnline News Services --tOnline Travel Services --tOnline Entertainment --tOnline Automotive Sites --tEnergy Online --tSelling Brainpower --tOnline Art Dealers --tE-Learning --tClick-and-Mortar Businesses --tInternet Marketing --tChoosing a Domain Name --tInternet Marketing Research --tWeb Design --tE-Mail Marketing --tPromotions --tE-Business Advertising --tWebcasting and Interactive Advertising --tE-Business Public Relations --tCustomer Relationship Management (CRM) --tBusiness-to-Business Marketing on the Web --tSearch Engines --tPartnerships --tMarketing to the World --tOnline Monetary Transactions --tCredit-Card Transactions --tE-Wallets --tAlternate Consumer Payment Options --tDigital Currency --tPeer-To-Peer Payments --tSmart Cards --tMicropayments --tBusiness-to-Business (B2B) Transactions --tE-Billing --tOnline Banking --tLegal, Ethical and Social Issues; Internet Taxation --tLegal Issues: Privacy on the Internet --tLegal Issues: Other Areas of Concern --tSocial Issues: Online Communities --tGlobal Issues --tInternet Taxation --tComputer and Network Security --tAncient Ciphers to Modern Cryptosystems --tSecret-key Cryptography --tPublic Key Cryptography --tKey Agreement Protocols --tKey Management --tDigital Signatures --tPublic Key Infrastructure, Certificates and Certification Authorities --tCryptanalysis --tSecurity Protocols --tSecurity Attacks --tNetwork Security --tSteganography --tHardware, Software and Communications --tStructure of the Internet --tHardware --tConnecting to the Internet --tSoftware --tBuilding a Web Site --tE-Commerce Consulting --tIntroduction to HyperText Markup Language 4 (HTML 4) --tMarkup Languages --tEditing HTML --tCommon Tags --tHeaders --tText Styling --tLinking --tImages --tFormatting Text With <FONT> --tSpecial Characters, Horizontal Rules and More Line Breaks --tIntermediate HTML 4 --tUnordered Lists --tNested and Ordered Lists --tBasic HTML Tables --tIntermediate HTML Tables and Formatting --tBasic HTML Forms --tMore Complex HTML Forms --tInternal Linking --tCreating and Using Image Maps --t<META> Tags --t<FRAMESET> Tag --tNested <FRAMESET> Tags --tUltimate Paint --tImage Basics --tFile Formats: GIF or JPEG? --tTool Palette --tBrushes --tEffects --tMicrosoft FrontPage Express --tMicrosoft FrontPage Express --tText Styles --tImages and Links --tSymbols and Lines --tForms --tMarquees and Scripts --tJavaScript/JScript: Introduction to Scripting --tA Simple Program: Printing a Line of Text in a Web Page --tAnother JavaScript Program: Adding Integers --tMemory Concepts --tArithmetic --tDecision Making: Equality and Relational Operators --tJavaScript Internet and World Wide Web Resources --tJavaScript/JScript: Control Structures I --tAlgorithms --tPseudocode --tControl Structures --tThe if Selection Structure --tThe if/else Selection Structure --tThe while Repetition Structure --tFormulating Algorithms: Case Study 1 (Counter-Controlled Repetition) --tFormulating Algorithms with Top-Down, Stepwise Refinement: Case Study 2 (Sentinel-Controlled Repetition) --tFormulating Algorithms with Top-Down, Stepwise Refinement: Case Study 3 (Nested Control Structures) --tAssignment Operators --tIncrement and Decrement Operators --tA Note on Data Types --tJavaScript Internet and World Wide Web Resources --tJavaScript/JScript: Control Structures II --tEssentials of Counter-Controlled Repetition --tThe for Repetition Structure --tExamples Using the for Structure --tThe switch Multiple-Selection Structure --tThe do/while Repetition Structure --tThe break and continue Statements --tThe Labeled break and continue Statements --tLogical Operators --tStructured Programming Summary --tJavaScript/JScript: Functions --tProgram Modules in JavaScript --tProgrammer-Defined Functions --tFunction Definitions --tRandom Number Generation --tExample: A Game of Chance --tDuration of Identifiers --tScope Rules --tJavaScript Global Functions --tJavaScript/JScript: Arrays --tArrays --tDeclaring and Allocating Arrays --tExamples Using Arrays --tReferences and Reference Parameters --tPassing Arrays to Functions --tSorting Arrays --tSearching Arrays: Linear Search --tMultiple-Subscripted Arrays --tJavaScript/JScript: Objects --tThinking About Objects --tMath Object --tString Object --tDate Object --tBoolean and Number Objects --tDynamic HTML: Cascading Style Sheets (CSS) --tInline Styles --tCreating Style Sheets with the STYLE Element --tConflicting Styles --tLinking External Style Sheets --tPositioning Elements --tElement Dimensions --tText Flow and the Box Model --tUser Style Sheets --tDynamic HTML: Object Model and Collections --tObject Referencing --tCollections all and children --tDynamic Styles --tDynamic Positioning --tUsing the frames Collection --tnavigator Object --tSummary of the DHTML Object Model --tDynamic HTML: Event Model --tEvent ONCLICK --tEvent ONLOAD --tError Handling with ONERROR --tTracking the Mouse with Event ONMOUSEMOVE --tRollovers with ONMOUSEOVER and ONMOUSEOUT --tForm Processing with ONFOCUS and ONBLUR --tMore Form Processing with ONSUBMIT and ONRESET --tEvent Bubbling --tMore DHTML Events --tDynamic HTML: Filters and Transitions --tFlip filters: flipv and fliph --tTransparency with the chroma Filter --tCreating Image masks --tMiscellaneous Image filters: invert, gray and xray --tAdding shadows to Text --tCreating Gradients with alpha --tMaking Text glow --tCreating Motion with blur --tUsing the wave Filter --tAdvanced Filters: dropShadow and light --tTransitions I: Filter blendTrans --tTransitions II: Filter revealTrans --tDynamic HTML: Data Binding with Tabular Data Control --tSimple Data Binding --tMoving a Recordset --tBinding to an IMG --tBinding to a TABLE --tSorting TABLE Data --tAdvanced Sorting and Filtering --tData Binding Elements --tDynamic HTML: Client-Side Scripting with VBScript --tOperators --tData Types and Control Structures --tVBScript Functions --tVBScript Example Programs --tArrays --tString Manipulation --tClasses and Objects --tActive Server Pages (ASP) --tHow Active Server Pages Work --tClient-side Scripting versus Server-side Scripting --tUsing Personal Web Server or Internet Information Server --tActive Server Page Objects --tA Simple ASP Example --tServer-side ActiveX Components --tFile System Objects --tSession Tracking and Cookies --tDatabases, SQL, Microsoft UDA and ADO --tAccessing a Database from an Active Server Page --tASP Case Studies --tSetup --tCase Study: a Shopping Cart --tCase Study: an Online Auction Site --tCase Study: a Comparison Pricing Search Engine --tXML (Extensible Markup Language) --tStructuring Data --tDocument Type Definitions (DTD) --tCustomized Markup Languages --tUsing XML with HTML --tDocument Object Model (DOM) --tExtensible Style Language (XSL) --tMicrosoft Schema --tExtensible Hypertext Markup Language (XHTML) --tMicrosoft BizTalk --tSimple Object Access Protocol (SOAP) --tCase Study: An Online Bookstore --tSetup --tClient-Side Documents --tXML Data (Book Listing) --tOther Server-Side Documents --tBusiness-to-Business (B2B) Models --tB2B Example --tPerl 5 and CGI (Common Gateway Interface) --tPerl --tString Processing and Regular Expressions --tViewing Client/Server Environment Variables --tForm Processing and Business Logic --tServer-Side Includes --tVerifying a Username and Password --tUsing ODBC to Connect to a Database --tCookies and Perl --tExample: An Internet Shopping Cart --tDynamic HTML: Structured Graphics ActiveX Control --tShape Primitives --tMoving Shapes with Translate --tRotation --tMouse Events and External Source Files --tScaling --tDynamic HTML: Path, Sequencer and Sprite ActiveX Controls --tDirectAnimation Path Control --tMultiple Path Controls --tTime Markers for Path Control --tDirectAnimation Sequencer Control --tDirectAnimation Sprite Control --tAnimated GIFs --tMultimedia: Audio, Video, Speech Synthesis and Recognition --tAdding Background Sounds with the BGSOUND Element --tAdding Video with the IMG Element's DYNSRC Property --tAdding Audio or Video with the EMBED Element --tUsing the Windows Media Player ActiveX Control --tMicrosoft Agent Control --tRealPlayer Activex Control --tEmbedding VRML in a Web page --tUsing Streaming Media --tMacromedia Flash 4: Building Interactive Animations --tLearning Flash with Hands-on Examples --tCreating a Projector (.exe) File Using Publish.8 tManually Embedding a Flash Movie in a Web page --tUsing Flash for Special Effects --tCreating a Store Front --tUsing Loops --tActionScripts --tAccessibility --tProviding Alternatives for Multimedia Content --tMaximizing Readability by Focusing on Structure --tAccessibility in HTML Tables --tAccessibility in HTML Frames --tUsing Voice Synthesis and Recognition with VoiceXML --tAccessibility in Microsoft Windows 2000 --tJAWS for Windows --tOther Accessibility Tools --tHTML Special Characters --tHTML Colors --tOperator Precedence Charts.  aSystem requirements for CD-ROM: Intel Pentium 133 MHz or faster processor (200 MHz recomm.); Microsoft Windows 95 or later, or Microsoft Windows NT 4.0 (or later); 24 Mb RAM for Windows 95 or later (48 Mb recommended), or 32 Mb for Windows NT 4.0 or later (48 Mb recommended); CD-ROM drive; Internet connection. 0aInternet programming. 0aWorld Wide Web. 0aElectronic commerce. 0aBusiness enterprisesxComputer networks. 0aInternet programmingvProblems, exercises, etc. 0aWorld Wide WebvProblems, exercises, etc. 0aComputer programming. 0aWeb site development.1 aDeitel, Paul J.1 aNieto, T. R.q(Tem R.)  a-  a.b12308274 1aQA76.625b.D45 2001llbksmz050  aX0bVFL  aQA76.625b.D45 200111364cam  22003374a 450000100090000000300060000900500170001500800410003201000150007301500150008802000220010304000300012504200080015504900090016305000270017208200180019910000190021724500330023626000320026930000350030150000200033650599940035650504921035065000371084265000491087991300061092890700151093494500381094999400121098793000271099946866425OCoLC20040521000000.0010423s2001    caum         a  1 0 eng    a2001035421  aGBA1-50141  a0596001703 (pbk.)  aDLCcDLCdUKMdVFLdOrPss  apcc  aVFLL00aQA76.73.J38bD348 200100a005.2/7622211 aDarwin, Ian F.10aJava cookbook /cIan Darwin.  aSebastopol, CA :bO'Reilly,  axxix, 850 p. :bill. ;c24 cm.  aIncludes index.00tGetting Started: Compiling, Running, and Debugging --tCompiling and Running Java: JDK --tEditing and Compiling with a Color-Highlighting Editor --tCompiling, Running, and Testing with an IDE --tUsing Classes from This Book --tAutomating Compilation with jr --tAutomating Compilation with make --tAutomating Compilation with Ant --tRunning Applets --tDealing with Deprecation Warnings --tConditional Debugging without #ifdef --tDebugging Printouts --tUsing a Debugger --tUnit Testing: Avoid the Need for Debuggers --tDecompiling Java Class Files --tPreventing Others from Decompiling Your Java Files --tGetting Readable Tracebacks --tFinding More Java Source Code --tProgram: Debug --tInteracting with the Environment --tGetting Environment Variables --tSystem Properties --tWriting JDK Release-Dependent Code --tWriting Operating System-Dependent Code
 --tUsing CLASSPATH Effectively --tUsing Extensions or Other Packaged APIs --tParsing Command-Line Arguments --tStrings and Things --tTaking Strings Apart with Substrings --tTaking Strings Apart with StringTokenizer --tPutting Strings Together with + and StringBuffer --tProcessing a String One Character at a Time --tAligning Strings --tConverting Between Unicode Characters and Strings --tReversing a String by Word or Character --tExpanding and Compressing Tabs --tControlling Case --tIndenting Text Documents --tEntering Non-Printable Characters --tTrimming Blanks from the End of a String --tParsing Comma-Separated Data --tProgram: A Simple Text Formatter --tProgram: Soundex Name Comparisons --tPattern Matching with Regular Expressions --tRegular Expression Syntax --tHow REs Work in Practice --tUsing Regular Expressions in Java --tTesting REs Interactively --tFinding the Matching Text --tReplacing the Matching Text --tPrinting All Occurrences of a Pattern --tPrinting Lines Containing a Pattern --tControlling Case in match() and subst() --tPrecompiling the RE --tMatching Newlines in Text --tProgram: Data Mining --tProgram: Full Grep --tNumbers --tChecking Whether a String Is a Valid Number --tStoring a Larger Number in a Smaller --tTaking a Fraction of an Integer Without Using Floating Point --tEnsuring the Accuracy of Floating-Point Numbers --tComparing Floating-Point Numbers --tRounding Floating-Point Numbers --tFormatting Numbers --tConverting Between Binary, Octal, Decimal, and Hexadecimal --tOperating on a Series of Integers --tWorking with Roman Numberals --tFormatting with Correct Plurals --tGenerating Random Numbers --tGenerating Better Random Numbers --tCalculating Trigonometric Functions --tTaking Logarithms --tMultiplying Matrixes --tUsing Complex Numbers --tHandling Very Large Numbers --tProgram: TempConverter --tProgram: Number Palindromes --tDates and Times --tFinding Today's Date --tPrinting Date/Time in a Specified Format --tRepresenting Dates in Other Epochs --tConverting YMDHMS to a Calendar or Epoch Seconds --tParising Strings into Dates --tConverting Epoch Seconds to DMYHMS --tAdding to or Subtracting from a Date or Calendar --tDifference Between Two Dates --tComparing Dates --tDay of Week/Month/Year or Week Number --tCalendar Page --tHigh-Resolution Timers --tSleeping for a While --tProgram: Reminder Service --tStructuring Data with Java --tData Structuring Using Arrays --tResizing an Array --tLike an Array, but More Dynamic --tData-Independent Access with Iterators --tStructuring Data in a Linked List --tMapping with Hashtable and HashMap --tStoring Strings in Properties and Preferences --tSorting a Collection --tSorting in Java 1.1 --tAvoiding the Urge to Sort --tSets --tFinding an Object in a Collection --tConverting a Collection to an Array --tRolling Your Own Iterator --tStack --tMultidimensional Structures --tFinally, Collections --tProgram: Timing Comparisons --tObject-Oriented Techniques --tPrinting Objects: Formatting with toString() --tOverriding the Equals Method --tOverriding the Hashcode Method --tThe Clone Method --tThe Finalize Method --tUsing Inner Classes --tProviding Callbacks via Interfaces --tPolymorphism/Abstract Methods --tPassing Values --tRoll Your Own Exceptions --tProgram: Plotter --tInput and Output --tReading Standard Input --tWriting Standard Output --tOpening a File by Name --tCopying a File --tReading a File into a String --tReassigning the Standard Streams --tDuplicating a Stream as It Is Written --tReading/Writing a Different Character Set --tThose Pesky End-of-Line Characters --tBeware Platform-Dependent File Code --tReading "Continued" Lines --tScanning a File --tBinary Data --tSeeking --tWriting Data Streams from C --tSaving and Restoring Serialized Objects --tPreventing ClassCastExceptions with SerialVersion UID --tReading and Writing JAR or Zip Archives --tReading and Writing Compressed Files --tProgram: Text to PostScript --tProgram: TarList (File Converter) --tDirectory and Filesystem Operations --tGetting File Information --tCreating a File --tRenaming a File --tDeleting a File --tCreating a Transient File --tChanging File Attributes --tListing a Directory --tGetting the Directory Roots --tMaking New Directories --tProgram: Find --tProgramming Serial and Parallel Ports --tChoosing a Port --tOpening a Serial Port --tOpening a Parallel Port --tResolving Port Conflicts --tReading and Writing: Lock Step --tReading and Writing: Event-Driven --tReading and Writing: Threads --tProgram: Penman Plotter --tGraphics and Sound --tPainting with a Graphics Object --tTesting Graphical Components --tDrawing Text --tDrawing Centered Text in a Component --tDrawing a Drop Shadow --tDrawing an Image --tPlaying a Sound File --tDisplaying a Moving Image with Video --tDrawing Text with 2D --tPrinting: JDK 1.1 --tPrinting: Java 2 --tProgram: PlotterAWT --tProgram: Grapher --tGraphical User Interfaces --tDisplaying GUI Components --tDesigning a Window Layout --tA Tabbed View of Life --tAction Handling: Making Buttons Work --tAction Handling Using Anonymous Inner Classes --tTerminating a Program with "Window Close" --tDialogs: When Later Just Won't Do --tGetting Program Output into a Window --tChoosing a File with JFileChooser --tChoosing a Color --tCentering a Main Window --tChanging a Swing Program's Look and Feel --tProgram: Custom Font Chooser --tProgram: Custom Layout Manager --tInternationalization and Localization --tCreating a Button with I18N Resources --tListing Available Locales --tCreating a Menu with I18N Resources --tWriting Internationalization Convenience Routines --tCreating a Dialog with I18N Resources --tCreating a Resource Bundle --tJIL Ting Your Code --tUsing a Particular Locale --tSetting the Default Locale --tFormatting Messages --tProgram: MenuIntl --tProgram: BusCard --tNetwork Clients --tContacting a Server --tFinding and Reporting Network Addresses --tHandling Network Errors --tReading and Writing Textual Data --tReading and Writing Binary Data --tReading and Writing Serialized Data --tUDP Datagrams --tProgram: TFTP UDP Client --tProgram: Telnet Client --tProgram: Chat Client --tServer-Side Java: Sockets --tOpening a Server for Business --tReturning a Response (String or Binary) --tReturning Object Information --tHandling Multiple Clients --tNetwork Logging --tProgram: A Java Chat Server --tNetwork Clients II: Applets and Web Clients --tEmbedding Java in a Web Page --tApplet Techniques --tContacting a Server on the Applet Host --tMaking an Applet Show a Document --tMaking an Applet Run a CGI Script --tReading the Contents of a URL --tExtracting HTML from a URL --tExtracting URLs from a File --tConverting a Filename to a URL --tProgram: MkIndex --tProgram: LinkChecker --tWeb Server Java: Servlets and JSP --tFirst Servlet: Generating an HTML Page --tServlets: Processing Form Parameters --tCookies --tSession Tracking --tGenerating PDF from a Servlet --tHTML Meets Java: JSP --tJSP Include/Forward --tJavaServer Pages Using a Servlet --tSimplifying Your JSP with a JavaBean --tJSP Syntax Summary --tProgram: CookieCutter --tProgram: JabaDot Web News Portal --tJava and Electronic Mail --tSending Email: Browser Version --tSending Email: For Real --tMail-Enabling a Server Program --tSending MIME Mail --tProviding Mail Settings --tSending Mail Without Using JavaMail --tReading Email --tProgram: MailReaderBean --tProgram: MailClient --tDatabase Access --tText-File Databases --tDBM Databases --tJDBC Setup and Connection --tConnecting to a JDBC Database --tSending a JDBC Query and Getting Results --tUsing JDBC Parameterized Statements --tUsing Stored Procedures with JDBC --tChanging Data Using a ResultSet --tChanging Data Using SQL --tFinding JDBC Metadata --tProgram: JDAdmin --tXML --tTransforming XML with XSLT --tParsing XML with SAX --tParsing XML with DOM --tVerifying Structure with a DTD --tGenerating Your Own XML with DOM --tProgram: xml2mif --tDistributed Java: RMI --tDefining the RMI Contract --tRMI Client --tRMI Server --tDeploying RMI Across a Network --tProgram: RMI Callbacks --tProgram: RMIWatch --tPackages and Packaging --tCreating a Package --tDocumenting Classes with Javadoc --tArchiving with jar --tRunning an Applet from a JAR --tRunning an Applet with a JDK --tRunning a Program from a JAR --tPreparing a Class as a JavaBean --tPickling Your Bean into a JAR --tPackaging a Servlet into a WAR File --t"Write Once, Install Anywhere" --tJava Web Start --tSigning Your JAR File --tThreaded Java --tRunning Code in a Different Thread --tDisplaying a Moving Image with Animation --tStopping a Thread --tRendezvous and Timeouts --tThread Communication: Synchronized Code --tThread Communication: wait() and notifyAll() --tBackground Saving in an Editor --tThreaded Network Server --tIntrospection, or "A Class Named C.8 tGetting a Class Descriptor --tFinding and Using Methods and Fields --tLoading and Instantiating a Class Dynamically --tConstructing a Class from Scratch --tPerformance Timing --tPrinting Class Information --tProgram: CrossRef --tProgram: AppletViewer --tUsing Java with Other Languages --tRunning a Program --tRunning a Program and Capturing Its Output --tMixing Java and Scripts with BSF --tBlending in Native Code (C/C++) --tCalling Java from Native Code --tProgram: DBM. 0aJava (Computer program language) 0aProgramming languages (Electronic computers)  a-  a.b12266152 1aQA76.73.J38bD348 2001llbksz050  aX0bVFL  aQA76.73.J38bD348 2001
